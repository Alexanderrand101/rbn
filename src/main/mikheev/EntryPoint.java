package mikheev;

import org.knowm.xchart.QuickChart;
import org.knowm.xchart.SwingWrapper;
import org.knowm.xchart.XYChart;
import org.knowm.xchart.internal.ChartBuilder;
import org.knowm.xchart.style.markers.SeriesMarkers;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;

public class EntryPoint {

    public static final double[] in = new double[]{
            91.25,
            91.57,
            91.90,
            91.58,
            91.67,
            92.10,
            92.26,
            92.07,
            91.61,
            90.74,
            90.74,
            90.15,
            90.31,
            90.30,
            90.37,
            90.19,
            89.92,
            89.01,
            89.23,
            88.89,
            89.13,
            89.00,
            88.95,
            88.51,
            89.04,
            89.41,
            89.45,
            90.12,
            90.12,
            90.33,
            90.10,
            89.59,
            89.01,
            88.51,
            89.01,
            89.01,
            89.64,
            89.91,
            89.66,
            89.81,
            89.79,
            90.28,
            90.55,
            90.28,
            89.91,
            90.04,
            89.59,
            89.61,
            90.16,
            90.07,
            89.87,
            89.64,
            89.69,
            90.13,
            90.21,
            89.98,
            89.95,
            89.37,
            89.47,
            89.03,
            88.60,
            88.98,
            89.72,
            89.81,
            89.71,
            89.86,
            89.78,
            90.15,
            89.78,
            89.53,
            89.28,
            89.25,
            89.46,
            89.50,
            89.14,
            89.23,
            89.35,
            89.70,
            90.08,
            90.71,
            90.54,
            90.95,
            91.37,
            91.34,
            91.63,
            92.26,
            92.34,
            92.25,
            92.41,
            92.59,
            92.96,
            92.88,
            92.52,
            92.41,
            92.46,
            93.09,
            93.28,
            93.38,
            93.54,
            93.58,
            93.53,
            93.92,
            93.70,
            94.13,
            94.13,
            94.79,
            94.12,
            93.96,
            94.17,
            93.99,
            93.87,
            93.63,
            93.38,
            93.54,
            93.56,
            93.80,
            93.70,
            94.78,
            94.78,
            94.86,
            94.73,
            94.72,
            94.40,
            94.18,
            93.94,
            94.35,
            94.97,
            95.10,
            94.35,
            94.78,
            94.41,
            94.41,
            94.22,
            93.77,
            93.81,
            93.89,
            94.49,
            94.56,
            94.50,
            94.27,
            94.70,
            94.81,
            94.94,
            94.23,
            94.44,
            94.39,
            94.13,
            94.54,
            94.46,
            94.11,
            94.28,
            94.43,
            94.99,
            94.96,
            95.19,
            95.05,
            94.89,
            95.36,
            96.22,
            96.25,
            96.61,
            96.58,
            96.54,
            95.98,
            95.79,
            95.15,
            95.05,
            95.58,
            95.06,
            94.68,
            94.64,
            94.52,
            94.68,
            95.08,
            95.08,
            95.38,
            95.12,
            94.99,
            95.33,
            95.11,
            95.23,
            94.77,
            94.52,
            94.93,
            94.49,
            94.23,
            94.12,
            93.49,
            93.80,
            93.78,
            93.71,
            93.77,
            94.52,
            94.74,
            94.93,
            95.14,
            95.41,
            95.41,
            95.31,
            95.44,
            95.35,
            95.18,
            94.71,
            94.91,
            94.75,
            94.75,
            95.30,
            95.64,
            95.44,
            95.75,
            95.71,
            96.18,
            96.46,
            96.13,
            96.35,
            96.79,
            96.90,
            96.08,
            96.34,
            96.08,
            96.12,
            95.81,
            96.55,
            96.73,
            97.38,
            97.14,
            96.66,
            96.79,
            96.33,
            96.07,
            96.72,
            96.59,
            96.59,
            96.83,
            96.98,
            97.28,
            96.68,
            96.70,
            97.20,
            96.97,
            96.90,
            97.01,
            96.76,
            96.48,
            97.18,
            97.36,
            97.02,
            97.06,
            97.43,
            97.18,
            96.57,
            96.48,
            95.73,
            96.46,
            96.01,
            96.57,
            96.00,
            95.97,
            95.74,
            96.42,
            95.88,
            95.75,
            95.23,
            95.48,
            94.79,
            95.12,
            95.27,
            95.21,
            95.68,
            95.68,
            95.71,
            95.99,
            95.99,
            95.96,
            95.77,
            96.30,
            95.47,
            95.42,
            95.52,
            95.03,
            95.30,
            95.30,
            95.57,
            95.82,
            96.15,
            96.29,
            96.42,
            96.86,
            96.50,
            96.94,
            96.81,
            96.74,
            96.74,
            96.35,
            96.29,
            96.46,
            96.37,
            96.27,
            95.87,
            96.04,
            96.04,
            96.45,
            96.61,
            96.80,
            96.80,
            97.63,
            97.27,
            97.17,
            96.90,
            96.51,
            96.77,
            96.59,
            96.52,
            95.83,
            95.20,
            95.99,
            96.15,
            96.07,
            96.23,
            96.28,
            96.76,
            96.85,
            96.80,
            96.92,
            96.66,
            96.93,
            97.00,
            96.65,
            96.61,
            96.56,
            96.81,
            96.60,
            96.56,
            96.65,
            96.66,
            97.15,
            96.96,
            97.32,
            97.86,
            97.92,
            97.73,
            97.58,
            97.20,
            97.41,
            97.59,
            97.26,
            97.27,
            97.40,
            97.39,
            97.16,
            97.13,
            97.12,
            97.32,
            97.38,
            97.68,
            97.82,
            97.76,
            97.90,
            97.88,
            97.72,
            97.48,
            97.48,
            97.84,
            98.04,
            98.05,
            97.67,
            97.06,
            97.00,
            97.25,
            97.00,
            96.49,
            96.71,
            96.65,
            96.97,
            97.00,
            97.57,
            97.40,
            97.15,
            96.58,
            96.14,
            95.72,
            95.49,
            95.65,
            95.73,
            95.74,
            95.67,
            96.41,
            96.27,
            96.33,
            96.33,
            96.89,
            96.98,
            97.10,
            96.70,
            96.67,
            96.42,
            96.55,
            97.04,
            96.85,
            96.45,
            96.82,
            96.94,
            97.42,
            97.45,
            97.55,
            97.75,
            97.80,
            97.81,
            98.26,
            98.14,
            97.85,
            97.31,
            97.42,
            97.35,
            97.43,
            97.32,
            97.20,
            97.63,
            97.83,
            98.01,
            98.01,
            98.22,
            98.06,
            98.18,
            98.06,
            97.53,
            97.99,
            97.91,
            98.12,
            98.46,
            98.86,
            98.86,
            98.95,
            98.39,
            98.38,
            98.36,
            98.25,
            98.31,
            98.63,
            98.31,
            98.26,
            98.63,
            97.82,
            98.13,
            97.85,
            98.14,
            98.22,
            97.93,
            98.66,
            98.77,
            98.76,
            99.02,
            98.78,
            98.69,
            98.54,
            98.49,
            98.67,
            98.82,
            98.82,
            98.41,
            98.01,
            98.17,
            98.00,
            97.72,
            97.34,
            97.01,
            97.05,
            97.26,
            97.24,
            97.41,
            97.60,
            97.52,
            97.47,
            97.44,
            97.15,
            97.04,
            97.37,
            97.81,
            97.76,
            97.99,
            98.20,
            98.03,
            98.15,
            98.23,
            98.02,
            97.87,
            97.66,
            97.74,
            97.81,
            97.90,
            98.18,
            98.24,
            98.17,
            98.29,
            98.29,
            98.20,
            97.79,
            97.68,
            97.60,
            97.37,
            97.66,
            97.61,
            97.39,
            97.06,
            97.38,
            97.17,
            96.97,
            96.78,
            96.96,
            96.96,
            97.27,
            97.24,
            97.25,
            97.12,
            96.55,
            96.41,
            96.06,
            96.53,
            96.52,
            96.35,
            96.70,
            97.00,
            97.16,
            97.08,
            97.06,
            97.09,
            96.96,
            97.06,
            97.36,
            97.36,
            97.29,
            97.30,
            97.48,
            97.65,
            97.77,
            97.84,
            97.82,
            97.71,
            97.21,
            97.63,
            97.81,
            98.16,
            98.38,
            98.57,
            98.71,
            98.59,
            98.92,
            98.96,
            99.00,
            99.00,
            99.33,
            99.60,
            99.78,
            99.19,
            99.28,
            98.90,
            98.94,
            98.46,
            98.08,
            97.32,
            97.12,
            97.31,
            96.79,
            95.93,
            94.87,
            96.39,
            96.49,
            97.46,
            98.76,
            98.24,
            99.80,
            101.54,
            103.61,
            103.50,
            103.24,
            102.25,
            101.00,
            99.45,
            98.54,
            99.28,
            99.09,
            99.75,
            100.27,
            100.68,
            100.76,
            99.91,
            100.17,
            99.50,
            99.34,
            98.89,
            99.49,
            100.10,
            99.84,
            100.06,
            100.37,
            100.53,
            100.54,
            100.43,
            100.10,
            99.93,
            99.64,
            99.03,
            99.10,
            99.57,
            99.76,
            100.14,
            99.91,
            99.77,
            100.27,
            99.96,
            100.29,
            100.51,
            100.43,
            99.68,
            99.37,
            99.14,
            99.40,
            99.89,
            99.89,
            98.91,
            99.06,
            98.37,
            98.34,
            97.82,
            97.66,
            97.26,
            96.66,
            96.92,
            96.61,
            96.32,
            95.95,
            96.74,
            97.31,
            96.98,
            96.93,
            97.14,
            97.40,
            97.58,
            96.99,
            96.61,
            97.13,
            97.39,
            97.40,
            97.50,
            97.35,
            97.16,
            97.30,
            97.30,
            96.68,
            96.84,
            96.37,
            96.67,
            96.61,
            96.41,
            96.21,
            96.04,
            96.32,
            95.89,
            95.77,
            95.06,
            94.93,
            94.65,
            94.38,
            93.62,
            93.65,
            93.43,
            93.01,
            93.32,
            93.51,
            93.38,
            92.85,
            92.77,
            93.41,
            93.57,
            93.60,
            93.41,
            93.32,
            93.09,
            92.85,
            92.26,
            92.88,
            92.78,
            93.24,
            93.29,
            93.02,
            93.00,
            92.99,
            92.38,
            92.13,
            92.34,
            92.83,
            92.73,
            92.72,
            92.72,
            93.44,
            93.26,
            93.33,
            93.32,
            92.91,
            93.09,
            93.23,
            92.97,
            92.95,
            93.68,
            94.02,
            94.44,
            94.39,
            94.68,
            94.30,
            93.93,
            93.93,
            93.76,
            93.91,
            93.55,
            93.74,
            93.68,
            93.65,
            93.07,
            93.10,
            93.54,
            93.37,
            93.86,
            93.68,
            93.43,
            93.05,
            92.60,
            92.96,
            92.77,
            93.04,
            92.93,
            93.41,
            93.98,
            94.04,
            94.15,
            93.56,
            93.41,
            92.52,
            92.23,
            92.72,
            92.74,
            93.02,
            92.96,
            92.75,
            92.63,
            92.40,
            92.31,
            92.28,
            92.40,
            92.49,
            92.22
    };

    private static double[] shampoo = new double[]{
            266.0
            ,145.9
            ,183.1
            ,119.3
            ,180.3
            ,168.5
            ,231.8
            ,224.5
            ,192.8
            ,122.9
            ,336.5
            ,185.9
            ,194.3
            ,149.5
            ,210.1
            ,273.3
            ,191.4
            ,287.0
            ,226.0
            ,303.6
            ,289.9
            ,421.6
            ,264.5
            ,342.3
            ,339.7
            ,440.4
            ,315.9
            ,439.3
            ,401.3
            ,437.4
            ,575.5
            ,407.6
            ,682.0
            ,475.3
            ,581.3
            ,646.9
    };

    private static double[] nvdia = new double[] {
            239.91
            ,236.07
            ,237.06
            ,239.93
            ,240.38
            ,243.02
            ,244.32
            ,251.98
            ,247.28
            ,245.57
            ,248.93
            ,249.28
            ,247.94
            ,250.05
            ,252.86
            ,250.48
            ,240.2
            ,247.97
            ,245.54
            ,245.81
            ,236.43
            ,240.33
            ,247.13
            ,250.76
            ,254.25
            ,251.59
            ,262.97
            ,267.89
            ,272.54
            ,270.78
            ,289.79
            ,296.57
            ,314.7
            ,308.7
            ,294.07
            ,273.28
            ,262.05
            ,267.65
            ,252.6
            ,270.07
            ,276.43
            ,265.89
            ,284.51
            ,273.29
            ,266.04
            ,245.44
            ,261.08
            ,246.47
            ,216.31
            ,240.84
            ,196.4
            ,217.27
            ,202.82
            ,212.97
            ,205.75
            ,212.69
            ,249.18
            ,245.62
            ,257.24
            ,252.73
            ,265.59
            ,263.6
            ,243.07
            ,255.47
            ,243.91
            ,268.4
            ,259.03
            ,266.95
            ,262.95
            ,269.85
            ,283.95
            ,280.84
            ,294.7
            ,292.32
            ,287.05
            ,269.51
            ,286.15
            ,284.01
            ,289.59
            ,297.08
            ,291.36
            ,298.46
            ,292.28
            ,282.78
            ,291.29
            ,293.74
            ,297.79
            ,304.87
            ,312.5
            ,322.62
            ,312.1
            ,311.2
            ,321.22
            ,339.63
            ,350.01
            ,352.22
            ,358.8
            ,351.01
            ,361.05
            ,348.71
            ,341.01
            ,339.48
            ,355.02
            ,352.25
            ,353.01
            ,350.78
            ,350.66
            ,356.8
            ,352.2
            ,361.84
            ,374.67
            ,351.85
            ,357.3
            ,366.95
            ,362.74
            ,369.44
            ,368.72
            ,370.45
            ,381.07
            ,378
            ,369.42
            ,379.6
            ,366.2
            ,368
            ,379.91
            ,381.2
            ,384.49
            ,393.57
            ,394.87
            ,408.64
            ,420.36
            ,419.17
            ,402.09
            ,415.08
            ,409.09
            ,405.39
            ,408.06
            ,420.43
            ,413.14
            ,417.55
            ,405.19
            ,407.78
            ,416.86
            ,408.62
            ,418.62
            ,424.56
            ,424.59
            ,440.41
            ,449.11
            ,451.47
            ,453.42
            ,447.98
            ,446.6
            ,434
            ,457.61
            ,457.72
            ,462.56
            ,493.48
            ,490.43
            ,485.54
            ,485.64
            ,507.34
            ,508.81
            ,510
            ,510.92
            ,505.13
            ,525.91
            ,534.98
            ,552.84
            ,573.86
            ,520.62
            ,504.9
            ,476.52
            ,508.6
            ,492.47
            ,486.58
            ,514.89
            ,519.64
            ,500.58
            ,498.54
            ,487.57
            ,500.69
            ,505.51
            ,484.95
            ,493.92
            ,514.95
            ,521.4
            ,529.03
            ,541.22
            ,544.58
            ,522.49
            ,545.7
            ,562.6
    };

    private static double[] births = new double[]{

            35
            ,32
            ,30
            ,31
            ,44
            ,29
            ,45
            ,43
            ,38
            ,27
            ,38
            ,33
            ,55
            ,47
            ,45
            ,37
            ,50
            ,43
            ,41
            ,52
            ,34
            ,53
            ,39
            ,32
            ,37
            ,43
            ,39
            ,35
            ,44
            ,38
            ,24
            ,23
            ,31
            ,44
            ,38
            ,50
            ,38
            ,51
            ,31
            ,31
            ,51
            ,36
            ,45
            ,51
            ,34
            ,52
            ,47
            ,45
            ,46
            ,39
            ,48
            ,37
            ,35
            ,52
            ,42
            ,45
            ,39
            ,37
            ,30
            ,35
            ,28
            ,45
            ,34
            ,36
            ,50
            ,44
            ,39
            ,32
            ,39
            ,45
            ,43
            ,39
            ,31
            ,27
            ,30
            ,42
            ,46
            ,41
            ,36
            ,45
            ,46
            ,43
            ,38
            ,34
            ,35
            ,56
            ,36
            ,32
            ,50
            ,41
            ,39
            ,41
            ,47
            ,34
            ,36
            ,33
            ,35
            ,38
            ,38
            ,34
            ,53
            ,34
            ,34
            ,38
            ,35
            ,32
            ,42
            ,34
            ,46
            ,30
            ,46
            ,45
            ,54
            ,34
            ,37
            ,35
            ,40
            ,42
            ,58
            ,51
            ,32
            ,35
            ,38
            ,33
            ,39
            ,47
            ,38
            ,52
            ,30
            ,34
            ,40
            ,35
            ,42
            ,41
            ,42
            ,38
            ,24
            ,34
            ,43
            ,36
            ,55
            ,41
            ,45
            ,41
            ,37
            ,43
            ,39
            ,33
            ,43
            ,40
            ,38
            ,45
            ,46
            ,34
            ,35
            ,48
            ,51
            ,36
            ,33
            ,46
            ,42
            ,48
            ,34
            ,41
            ,35
            ,40
            ,34
            ,30
            ,36
            ,40
            ,39
            ,45
            ,38
            ,47
            ,33
            ,30
            ,42
            ,43
            ,41
            ,41
            ,59
            ,43
            ,45
            ,38
            ,37
            ,45
            ,42
            ,57
            ,46
            ,51
            ,41
            ,47
            ,26
            ,35
            ,44
            ,41
            ,42
            ,36
            ,45
            ,45
            ,45
            ,47
            ,38
            ,42
            ,35
            ,36
            ,39
            ,45
            ,43
            ,47
            ,36
            ,41
            ,50
            ,39
            ,41
            ,46
            ,64
            ,45
            ,34
            ,38
            ,44
            ,48
            ,46
            ,44
            ,37
            ,39
            ,44
            ,45
            ,33
            ,44
            ,38
            ,46
            ,46
            ,40
            ,39
            ,44
            ,48
            ,50
            ,41
            ,42
            ,51
            ,41
            ,44
            ,38
            ,68
            ,40
            ,42
            ,51
            ,44
            ,45
            ,36
            ,57
            ,44
            ,42
            ,53
            ,42
            ,34
            ,40
            ,56
            ,44
            ,53
            ,55
            ,39
            ,59
            ,55
            ,73
            ,55
            ,44
            ,43
            ,40
            ,47
            ,51
            ,56
            ,49
            ,54
            ,56
            ,47
            ,44
            ,43
            ,42
            ,45
            ,50
            ,48
            ,43
            ,40
            ,59
            ,41
            ,42
            ,51
            ,49
            ,45
            ,43
            ,42
            ,38
            ,47
            ,38
            ,36
            ,42
            ,35
            ,28
            ,44
            ,36
            ,45
            ,46
            ,48
            ,49
            ,43
            ,42
            ,59
            ,45
            ,52
            ,46
            ,44
            ,52
            ,45
            ,32
            ,46
            ,41
            ,34
            ,33
            ,36
            ,49
            ,43
            ,43
            ,34
            ,39
            ,35
            ,52
            ,47
            ,52
            ,39
            ,40
            ,42
            ,42
            ,53
            ,39
            ,40
            ,38
            ,44
            ,34
            ,37
            ,52
            ,48
            ,55
            ,50
    };

    private static double[] money2 = new double[]{
            96.423
            ,95.878
            ,95.75
            ,95.228
            ,95.479
            ,94.79
            ,95.12
            ,95.266
            ,95.207
            ,95.675
            ,95.677
            ,95.713
            ,95.993
            ,95.993
            ,95.959
            ,95.772
            ,96.297
            ,95.465
            ,95.424
            ,95.516
            ,95.031
            ,95.304
            ,95.3
            ,95.57
            ,95.817
            ,96.152
            ,96.289
            ,96.416
            ,96.857
            ,96.503
            ,96.938
            ,96.805
            ,96.74
            ,96.74
            ,96.349
            ,96.294
            ,96.463
            ,96.367
            ,96.271
            ,95.865
            ,96.038
            ,96.043
            ,96.45
            ,96.61
            ,96.795
            ,96.799
            ,97.628
            ,97.269
            ,97.174
            ,96.899
            ,96.512
            ,96.769
            ,96.59
            ,96.516
            ,95.831
            ,95.201
            ,95.987
            ,96.151
            ,96.068
            ,96.225
            ,96.283
            ,96.764
            ,96.845
            ,96.799
            ,96.923
            ,96.662
            ,96.925
            ,97.002
            ,96.65
            ,96.611
            ,96.558
            ,96.809
            ,96.598
            ,96.556
            ,96.652
            ,96.658
            ,97.151
            ,96.955
            ,97.32
            ,97.855
            ,97.919
            ,97.726
            ,97.581
            ,97.201
            ,97.41
            ,97.586
            ,97.26
            ,97.268
            ,97.399
            ,97.388
            ,97.164
            ,97.125
            ,97.12
            ,97.322
            ,97.376
            ,97.678
            ,97.824
            ,97.764
            ,97.896
            ,97.881
            ,97.723
            ,97.477
            ,97.477
            ,97.842
            ,98.035
            ,98.053
            ,97.666
            ,97.06
            ,96.999
            ,97.251
            ,96.997
            ,96.49
            ,96.711
            ,96.645
            ,96.97
            ,96.999
            ,97.57
            ,97.396
            ,97.153
            ,96.582
            ,96.138
            ,95.718
            ,95.487
            ,95.648
            ,95.728
            ,95.742
            ,95.666
            ,96.409
            ,96.274
            ,96.331
            ,96.331
            ,96.89
            ,96.984
            ,97.095
            ,96.703
            ,96.666
            ,96.424
            ,96.545
            ,97.041
            ,96.853
            ,96.449
            ,96.817
            ,96.94
            ,97.418
            ,97.452
            ,97.552
            ,97.751
            ,97.796
            ,97.809
            ,98.258
            ,98.144
            ,97.852
            ,97.308
            ,97.417
            ,97.345
            ,97.434
            ,97.322
            ,97.198
            ,97.631
            ,97.826
            ,98.005
            ,98.007
            ,98.221
            ,98.063
            ,98.179
            ,98.064
            ,97.53
            ,97.989
            ,97.907
            ,98.12
            ,98.455
            ,98.86
            ,98.86
            ,98.949
            ,98.393
            ,98.382
            ,98.362
            ,98.248
            ,98.307
            ,98.628
            ,98.308
            ,98.255
            ,98.627
            ,97.819
            ,98.134
            ,97.847
            ,98.136
            ,98.221
            ,97.927
            ,98.659
            ,98.765
            ,98.761
            ,99.021
            ,98.777
            ,98.689
            ,98.54
            ,98.488
            ,98.665
            ,98.822
            ,98.815
            ,98.406
            ,98.005
            ,98.17
            ,98.003
            ,97.723
            ,97.335
            ,97.008
            ,97.05
            ,97.256
            ,97.236
            ,97.405
            ,97.599
            ,97.524
            ,97.469
            ,97.439
            ,97.154
            ,97.041
            ,97.366
            ,97.805
            ,97.764
            ,97.989
            ,98.201
            ,98.033
            ,98.151
            ,98.23
            ,98.019
            ,97.871
            ,97.663
            ,97.742
            ,97.814
            ,97.899
            ,98.176
            ,98.238
            ,98.17
            ,98.288
            ,98.288
            ,98.202
            ,97.791
            ,97.681
            ,97.602
            ,97.371
            ,97.661
            ,97.609
            ,97.385
            ,97.056
            ,97.384
            ,97.171
            ,96.965
            ,96.777
            ,96.963
            ,96.955
            ,97.274
            ,97.235
            ,97.251
            ,97.115
            ,96.546
            ,96.407
            ,96.058
            ,96.525
            ,96.521
            ,96.35
            ,96.702
            ,96.996
            ,97.162
            ,97.078
            ,97.06
            ,97.094
            ,96.96
            ,97.062
            ,97.359
            ,97.359
            ,97.294
            ,97.295
            ,97.484
            ,97.65
            ,97.767
            ,97.835
            ,97.819
            ,97.706
            ,97.213
            ,97.625
            ,97.809
            ,98.158
            ,98.381
            ,98.571
            ,98.714
            ,98.594
            ,98.922
            ,98.958
            ,99.003
            ,99.003
            ,99.333
            ,99.597
            ,99.776
            ,99.188
            ,99.284
            ,98.901
            ,98.938
            ,98.461
            ,98.081
            ,97.319
            ,97.122
            ,97.307
            ,96.79
            ,95.934
            ,94.87
            ,96.389
            ,96.492
            ,97.464
            ,98.764
            ,98.24
            ,99.804
            ,101.543
            ,103.605
            ,103.502
            ,103.24
            ,102.247
            ,100.997
            ,99.453
            ,98.537
            ,99.281
            ,99.092
            ,99.753
            ,100.271
            ,100.677
            ,100.755
            ,99.914
            ,100.17
            ,99.504
            ,99.336
            ,98.885
            ,99.486
            ,100.1
            ,99.836
            ,100.058
            ,100.374
            ,100.528
            ,100.535
            ,100.434
            ,100.097
            ,99.934
            ,99.644
            ,99.028
            ,99.1
            ,99.567
            ,99.762
            ,100.136
            ,99.906
            ,99.769
            ,100.27
            ,99.956
            ,100.291
            ,100.507
            ,100.434
            ,99.681
            ,99.366
            ,99.135
            ,99.403
            ,99.888
            ,99.888
            ,98.906
            ,99.058
            ,98.372
            ,98.341
            ,97.82
            ,97.659
            ,97.259
            ,96.657
            ,96.922
            ,96.608
            ,96.321
            ,95.95
            ,96.739
            ,97.305
            ,96.978
            ,96.933
            ,97.144
            ,97.4
            ,97.577
            ,96.985
            ,96.608
            ,97.129
            ,97.388
            ,97.404
            ,97.501
            ,97.349
            ,97.155
            ,97.301
            ,97.301
            ,96.682
            ,96.839
            ,96.368
            ,96.673
            ,96.614
            ,96.407
            ,96.207
            ,96.039
            ,96.319
            ,95.889
            ,95.772
            ,95.06
            ,94.93
            ,94.649
            ,94.38
            ,93.615
            ,93.647
            ,93.432
            ,93.009
            ,93.321
            ,93.507
            ,93.378
            ,92.85
            ,92.768
            ,93.412
            ,93.569
            ,93.6
            ,93.408
            ,93.317
            ,93.085
            ,92.847
            ,92.259
            ,92.88
            ,92.778
            ,93.24
            ,93.289
            ,93.019
            ,92.996
            ,92.991
            ,92.379
            ,92.131
            ,92.337
            ,92.834
            ,92.733
            ,92.719
            ,92.719
            ,93.441
            ,93.258
            ,93.331
            ,93.32
            ,92.912
            ,93.085
            ,93.231
            ,92.969
            ,92.952
            ,93.684
            ,94.018
            ,94.443
            ,94.394
            ,94.682
            ,94.302
            ,93.927
            ,93.927
            ,93.762
            ,93.909
            ,93.545
            ,93.744
            ,93.678
            ,93.648
            ,93.065
            ,93.104
            ,93.536
            ,93.366
            ,93.864
            ,93.679
            ,93.429
            ,93.051
            ,92.599
            ,92.964
            ,92.765
            ,93.044
            ,92.927
            ,93.409
            ,93.977
            ,94.042
            ,94.145
            ,93.56
            ,93.411
            ,92.516
            ,92.225
            ,92.715
            ,92.736
            ,93.024
            ,92.956
            ,92.75
            ,92.63
            ,92.398
            ,92.311
            ,92.284
            ,92.395
            ,92.494
            ,92.22
    };

    private static double[] temperature = new double[]{
            20.7
            ,17.9
            ,18.8
            ,14.6
            ,15.8
            ,15.8
            ,15.8
            ,17.4
            ,21.8
            ,20.0
            ,16.2
            ,13.3
            ,16.7
            ,21.5
            ,25.0
            ,20.7
            ,20.6
            ,24.8
            ,17.7
            ,15.5
            ,18.2
            ,12.1
            ,14.4
            ,16.0
            ,16.5
            ,18.7
            ,19.4
            ,17.2
            ,15.5
            ,15.1
            ,15.4
            ,15.3
            ,18.8
            ,21.9
            ,19.9
            ,16.6
            ,16.8
            ,14.6
            ,17.1
            ,25.0
            ,15.0
            ,13.7
            ,13.9
            ,18.3
            ,22.0
            ,22.1
            ,21.2
            ,18.4
            ,16.6
            ,16.1
            ,15.7
            ,16.6
            ,16.5
            ,14.4
            ,14.4
            ,18.5
            ,16.9
            ,17.5
            ,21.2
            ,17.8
            ,18.6
            ,17.0
            ,16.0
            ,13.3
            ,14.3
            ,11.4
            ,16.3
            ,16.1
            ,11.8
            ,12.2
            ,14.7
            ,11.8
            ,11.3
            ,10.6
            ,11.7
            ,14.2
            ,11.2
            ,16.9
            ,16.7
            ,8.1
            ,8.0
            ,8.8
            ,13.4
            ,10.9
            ,13.4
            ,11.0
            ,15.0
            ,15.7
            ,14.5
            ,15.8
            ,16.7
            ,16.8
            ,17.5
            ,17.1
            ,18.1
            ,16.6
            ,10.0
            ,14.9
            ,15.9
            ,13.0
            ,7.6
            ,11.5
            ,13.5
            ,13.0
            ,13.3
            ,12.1
            ,12.4
            ,13.2
            ,13.8
            ,10.6
            ,9.0
            ,10.0
            ,9.8
            ,11.5
            ,8.9
            ,7.4
            ,9.9
            ,9.3
            ,9.9
            ,7.4
            ,8.6
            ,11.9
            ,14.0
            ,8.6
            ,10.0
            ,13.5
            ,12.0
            ,10.5
            ,10.7
            ,8.1
            ,10.1
            ,10.6
            ,5.3
            ,6.6
            ,8.5
            ,11.2
            ,9.8
            ,5.9
            ,3.2
            ,2.1
            ,3.4
            ,5.4
            ,9.6
            ,11.5
            ,12.3
            ,12.6
            ,11.0
            ,11.2
            ,11.4
            ,11.8
            ,12.8
            ,11.6
            ,10.6
            ,9.8
            ,11.2
            ,5.7
            ,7.1
            ,2.5
            ,3.5
            ,4.6
            ,11.0
            ,5.7
            ,7.7
            ,10.4
            ,11.4
            ,9.2
            ,6.1
            ,2.7
            ,4.3
            ,6.3
            ,3.8
            ,4.4
            ,7.1
            ,4.8
            ,5.8
            ,6.2
            ,7.3
            ,9.2
            ,10.2
            ,9.5
            ,9.5
            ,10.7
            ,10.0
            ,6.5
            ,7.0
            ,7.4
            ,8.1
            ,6.6
            ,8.3
            ,8.9
            ,4.6
            ,6.8
            ,5.7
            ,6.1
            ,7.0
            ,7.2
            ,6.3
            ,8.8
            ,5.0
            ,7.4
            ,10.1
            ,12.0
            ,9.0
            ,8.9
            ,9.8
            ,9.0
            ,9.2
            ,7.7
            ,8.0
            ,6.1
            ,3.5
            ,3.2
            ,5.7
            ,7.7
            ,9.0
            ,10.0
            ,6.2
            ,6.9
            ,6.5
            ,6.8
            ,7.0
            ,5.2
            ,3.0
            ,5.6
            ,7.9
            ,9.0
            ,8.6
            ,10.3
            ,10.5
            ,7.6
            ,9.7
            ,12.5
            ,7.4
            ,7.9
            ,3.9
            ,6.6
            ,4.6
            ,7.0
            ,6.0
            ,5.5
            ,8.1
            ,5.5
            ,6.2
            ,8.0
            ,10.3
            ,9.8
            ,9.6
            ,8.5
            ,7.5
            ,11.2
            ,14.6
            ,11.7
            ,7.8
            ,12.3
            ,10.1
            ,11.5
            ,7.3
            ,10.9
            ,14.1
            ,10.7
            ,16.9
            ,10.5
            ,6.5
            ,11.0
            ,6.3
            ,10.5
            ,7.2
            ,7.6
            ,10.7
            ,7.8
            ,9.6
            ,11.4
            ,12.4
            ,8.9
            ,13.2
            ,8.6
            ,6.2
            ,11.4
            ,13.2
            ,14.3
            ,7.3
            ,12.9
            ,7.8
            ,6.2
            ,5.6
            ,10.0
            ,13.3
            ,8.3
            ,10.2
            ,8.6
            ,7.3
            ,10.4
            ,11.2
            ,13.2
            ,11.4
            ,9.1
            ,6.6
            ,8.4
            ,9.7
            ,13.2
            ,12.5
            ,11.0
            ,11.0
            ,11.7
            ,9.2
            ,11.5
            ,13.6
            ,13.7
            ,10.4
            ,11.5
            ,7.6
            ,9.6
            ,14.2
            ,15.7
            ,10.5
            ,10.5
            ,9.7
            ,9.5
            ,11.3
            ,8.9
            ,9.4
            ,11.9
            ,11.7
            ,13.4
            ,12.6
            ,10.1
            ,15.8
            ,13.6
            ,11.9
            ,9.9
            ,12.6
            ,17.8
            ,15.0
            ,13.6
            ,13.4
            ,10.5
            ,14.2
            ,11.5
            ,13.0
            ,15.0
            ,14.7
            ,12.6
            ,12.5
            ,13.5
            ,14.8
            ,17.2
            ,9.7
            ,12.1
            ,12.8
            ,11.2
            ,16.4
            ,15.6
            ,13.3
            ,11.0
            ,11.1
            ,15.0
            ,12.8
            ,15.0
            ,14.2
            ,14.0
            ,15.5
            ,13.3
            ,15.6
            ,15.2
            ,17.4
            ,17.0
            ,15.0
            ,13.5
            ,15.2
            ,13.0
            ,12.5
            ,14.1
            ,14.8
            ,16.2
            ,15.8
            ,19.1
            ,22.2
            ,15.9
            ,13.0
            ,14.1
            ,15.8
            ,24.0
            ,18.0
            ,19.7
            ,25.2
            ,20.5
            ,19.3
            ,15.8
            ,17.0
            ,18.4
            ,13.3
            ,14.6
            ,12.5
            ,17.0
            ,17.1
            ,14.0
            ,14.6
            ,13.3
            ,14.8
            ,15.1
            ,13.1
            ,13.6
            ,19.5
            ,22.7
            ,17.2
            ,13.5
            ,15.4
            ,17.0
            ,19.2
            ,22.8
            ,26.3
            ,18.2
            ,17.0
            ,14.8
            ,12.8
            ,15.5
            ,15.6
            ,13.1
            ,15.2
            ,14.1
            ,12.5
            ,14.6
            ,10.4
            ,13.9
            ,11.9
            ,13.5
            ,9.8
            ,14.0
            ,21.5
            ,19.5
            ,16.7
            ,19.1
            ,11.0
            ,9.0
            ,10.0
            ,14.6
            ,12.5
            ,17.2
            ,19.2
            ,22.2
            ,15.7
            ,14.2
            ,9.8
            ,14.0
            ,17.5
            ,20.7
            ,15.6
            ,13.2
            ,14.5
            ,16.8
            ,17.2
            ,13.4
            ,14.2
            ,14.3
            ,10.2
            ,10.4
            ,12.3
            ,11.9
            ,11.2
            ,8.5
            ,12.0
            ,12.4
            ,12.9
            ,10.1
            ,15.0
            ,13.6
            ,12.4
            ,13.6
            ,16.1
            ,19.5
            ,14.2
            ,9.3
            ,10.1
            ,7.4
            ,8.6
            ,7.8
            ,9.1
            ,13.0
            ,16.5
            ,12.9
            ,6.9
            ,6.9
            ,8.7
            ,10.0
            ,10.8
            ,7.5
            ,6.3
            ,11.9
            ,13.8
            ,11.8
            ,11.0
            ,10.1
            ,8.5
            ,5.5
            ,7.6
            ,8.7
            ,10.8
            ,11.2
            ,9.1
            ,3.7
            ,4.6
            ,6.6
            ,13.2
            ,15.2
            ,7.6
            ,8.4
            ,6.0
            ,8.3
            ,8.6
            ,11.1
            ,12.1
            ,12.9
            ,14.0
            ,12.5
            ,11.5
            ,7.0
            ,7.1
            ,9.0
            ,3.1
            ,2.5
            ,0.0
            ,1.6
            ,2.6
            ,5.7
            ,2.3
            ,4.5
            ,8.2
            ,6.9
            ,7.3
            ,6.0
            ,7.3
            ,7.6
            ,8.0
            ,8.0
            ,6.8
            ,7.3
            ,6.2
            ,6.9
            ,8.9
            ,4.0
            ,1.3
            ,0.8
            ,4.3
            ,7.3
            ,7.7
            ,9.0
            ,4.2
            ,1.6
            ,2.6
            ,3.4
            ,3.9
            ,7.0
            ,7.8
            ,5.3
            ,2.4
            ,2.8
            ,4.0
            ,7.5
            ,7.8
            ,5.6
            ,3.3
            ,5.0
            ,3.7
            ,3.9
            ,5.2
            ,0.2
            ,0.8
            ,0.9
            ,3.5
            ,6.6
            ,9.5
            ,9.0
            ,3.5
            ,4.5
            ,5.7
            ,5.6
            ,7.1
            ,9.7
            ,8.3
            ,9.1
            ,2.8
            ,2.2
            ,4.5
            ,3.8
            ,3.8
            ,6.2
            ,11.5
            ,10.2
            ,7.9
            ,9.0
            ,9.5
            ,6.0
            ,8.2
            ,9.2
            ,4.3
            ,6.6
            ,9.4
            ,13.2
            ,6.6
            ,5.1
            ,12.1
            ,11.2
            ,8.5
            ,4.6
            ,7.0
            ,14.2
            ,12.7
            ,7.6
            ,4.0
            ,10.0
            ,10.5
            ,5.0
            ,4.5
            ,8.2
            ,4.3
            ,9.8
            ,5.8
            ,5.0
            ,8.5
            ,9.0
            ,3.6
            ,6.7
            ,6.7
            ,10.1
            ,15.0
            ,8.9
            ,5.7
            ,4.2
            ,4.0
            ,5.3
            ,6.3
            ,8.5
            ,11.5
            ,7.7
            ,9.2
            ,7.8
            ,6.3
            ,6.3
            ,8.6
            ,6.1
            ,13.2
            ,9.9
            ,4.7
            ,5.8
            ,14.9
            ,10.7
            ,8.6
            ,9.4
            ,13.4
            ,11.6
            ,11.1
            ,15.6
            ,17.0
            ,18.5
            ,17.4
            ,16.5
            ,16.2
            ,16.1
            ,13.2
            ,18.0
            ,12.8
            ,11.7
            ,16.7
            ,15.6
            ,10.2
            ,10.3
            ,15.0
            ,18.0
            ,13.8
            ,10.5
            ,11.8
            ,7.2
            ,11.6
            ,7.4
            ,14.2
            ,12.2
            ,9.0
            ,12.3
            ,19.7
            ,12.8
            ,12.4
            ,12.0
            ,12.0
            ,11.1
            ,12.7
            ,14.2
            ,11.6
            ,12.0
            ,11.5
            ,8.3
            ,10.5
            ,9.0
            ,6.9
            ,9.4
            ,11.1
            ,9.1
            ,7.7
            ,10.0
    };

    private static double[] visits = new double[]{
            2146
            ,3621
            ,3698
            ,3667
            ,3316
            ,2815
            ,1658
            ,2288
            ,3638
            ,4462
            ,4414
            ,4315
            ,3323
            ,1656
            ,2465
            ,4096
            ,4474
            ,4124
            ,3514
            ,3005
            ,2054
            ,2847
            ,4501
            ,4603
            ,4187
            ,4343
            ,3565
            ,2080
            ,3031
            ,4814
            ,5040
            ,5028
            ,4658
            ,3624
            ,2285
            ,3454
            ,5307
            ,5135
            ,5084
            ,4650
            ,3571
            ,2354
            ,3497
            ,5294
            ,4643
            ,4596
            ,4162
            ,2933
            ,2202
            ,3083
            ,4376
            ,4704
            ,4306
            ,4178
            ,3236
            ,2010
            ,2901
            ,4754
            ,4417
            ,4535
            ,4274
            ,3382
            ,2085
            ,3083
            ,4860
            ,4893
            ,4866
            ,4584
            ,3914
            ,2431
            ,3157
            ,5045
            ,4746
            ,4314
            ,3663
            ,3270
            ,2905
            ,4016
            ,5266
            ,5795
            ,5728
            ,5293
            ,3934
            ,3071
            ,3876
            ,5878
            ,5712
            ,5491
            ,5144
            ,3880
            ,2605
            ,3625
            ,4685
            ,4891
            ,4222
            ,3691
            ,2748
            ,1380
            ,1474
            ,2452
            ,2298
            ,1430
            ,1002
            ,1486
            ,1345
            ,1453
            ,2173
            ,2208
            ,1381
            ,1265
            ,1948
            ,1742
            ,1896
            ,3033
            ,3445
            ,3423
            ,3319
            ,2783
            ,1952
            ,2245
            ,3928
            ,3810
            ,3931
            ,3523
            ,2943
            ,1751
            ,2491
            ,3766
            ,4194
            ,4038
            ,3891
            ,3111
            ,1946
            ,2802
            ,3892
            ,4172
            ,4464
            ,4377
            ,3734
            ,2262
            ,3050
            ,4794
            ,4936
            ,5016
            ,4489
            ,3505
            ,2264
            ,3314
            ,5095
            ,5525
            ,5074
            ,4571
            ,3570
            ,2182
            ,3265
            ,4670
            ,4764
            ,4943
            ,4790
            ,3604
            ,2455
            ,3650
            ,5463
            ,5884
            ,5615
            ,5289
            ,4434
            ,2665
            ,3907
            ,5308
            ,5773
            ,5585
            ,4783
            ,3893
            ,2917
            ,3353
            ,5400
            ,5395
            ,5229
            ,5371
            ,4185
            ,2724
            ,3590
            ,5367
            ,5440
            ,5465
            ,5318
            ,4225
            ,2687
            ,3791
            ,5661
            ,5759
            ,5599
            ,5103
            ,4313
            ,2971
            ,3662
            ,5635
            ,5581
            ,5329
            ,4553
            ,3423
            ,2708
            ,3306
            ,5203
            ,5712
            ,5601
            ,5486
            ,4178
            ,2878
            ,4169
            ,6372
            ,6240
            ,6170
            ,6071
            ,4682
            ,3208
            ,4310
            ,6435
            ,6299
            ,6360
            ,6349
            ,4660
            ,3354
            ,4371
            ,6534
            ,6832
            ,6689
            ,5849
            ,4247
            ,3219
            ,4211
            ,6424
            ,6223
            ,6551
            ,6343
            ,4696
            ,3134
            ,3868
            ,6020
            ,5705
            ,5752
            ,5181
            ,4269
            ,2633
            ,3336
            ,5127
            ,5449
            ,5746
            ,5115
            ,3995
            ,2618
            ,2961
            ,4090
            ,5201
            ,5321
            ,5219
            ,4017
            ,2297
            ,3145
            ,4905
            ,4747
            ,4591
            ,4431
            ,3608
            ,2422
            ,3132
            ,4962
            ,4881
            ,5001
            ,4635
            ,3545
            ,2262
            ,2866
            ,4692
            ,4602
            ,4620
            ,4475
            ,3564
            ,2071
            ,2659
            ,4338
            ,4531
            ,4498
            ,4128
            ,3132
            ,1829
            ,2149
            ,3975
            ,4046
            ,3897
            ,3871
            ,2630
            ,1602
            ,1960
            ,4143
            ,4205
            ,4193
            ,3710
            ,3137
            ,1834
            ,2070
            ,4180
            ,4038
            ,3906
            ,3580
            ,2948
            ,1622
            ,2179
            ,3906
            ,3745
            ,4212
            ,3901
            ,3292
            ,1819
            ,2068
            ,3991
            ,4073
            ,4069
            ,3716
            ,3380
            ,1737
            ,2181
            ,3973
            ,3997
            ,4132
            ,3791
            ,2968
            ,1752
            ,2070
            ,3920
            ,4106
            ,4006
            ,3827
            ,2944
            ,1827
            ,2373
            ,4031
            ,4027
            ,3912
            ,3867
            ,3304
            ,1685
            ,2130
            ,3936
            ,4029
            ,4010
            ,4027
            ,2829
            ,1736
            ,2517
            ,4029
            ,4261
            ,4058
            ,4392
            ,3072
            ,1799
            ,2341
            ,3330
            ,4734
            ,4801
            ,4399
            ,3275
            ,2042
            ,2827
            ,4836
            ,4840
            ,4504
            ,4379
            ,3391
            ,2045
            ,2721
            ,4630
            ,4748
            ,4702
            ,4440
            ,3513
            ,2253
            ,3141
            ,5122
            ,5151
            ,4969
            ,4619
            ,3443
            ,2302
            ,3291
            ,5206
            ,5474
            ,5400
            ,5334
            ,4174
            ,2571
            ,3572
            ,5018
            ,5565
            ,5420
            ,5366
            ,4091
            ,2824
            ,3843
            ,5516
            ,5572
            ,5243
            ,5133
            ,4084
            ,2739
            ,3781
            ,5684
            ,5687
            ,5906
            ,5541
            ,4171
            ,2586
            ,3838
            ,5675
            ,5624
            ,5794
            ,5389
            ,4305
            ,3281
            ,3790
            ,5894
            ,5461
            ,5206
            ,5228
            ,4097
            ,2694
            ,3893
            ,6185
            ,6178
            ,6067
            ,5656
            ,4398
            ,2836
            ,3896
            ,5814
            ,5879
            ,4800
            ,3838
            ,3576
            ,2799
            ,4228
            ,6331
            ,6380
            ,6314
            ,6160
            ,4859
            ,3317
            ,4715
            ,6940
            ,6551
            ,6327
            ,6212
            ,4687
            ,3014
            ,4132
            ,5989
            ,5331
            ,5183
            ,4769
            ,3627
            ,1857
            ,2221
            ,3335
    };

    private static double[] returningVisits = new double[]{
            152
            ,231
            ,278
            ,287
            ,236
            ,241
            ,133
            ,175
            ,274
            ,268
            ,284
            ,286
            ,216
            ,140
            ,193
            ,296
            ,312
            ,308
            ,250
            ,241
            ,162
            ,200
            ,328
            ,359
            ,351
            ,319
            ,282
            ,177
            ,233
            ,366
            ,387
            ,421
            ,376
            ,329
            ,203
            ,286
            ,409
            ,421
            ,434
            ,376
            ,328
            ,244
            ,290
            ,451
            ,423
            ,416
            ,384
            ,279
            ,226
            ,264
            ,428
            ,402
            ,403
            ,407
            ,343
            ,191
            ,292
            ,440
            ,410
            ,454
            ,436
            ,362
            ,208
            ,289
            ,490
            ,437
            ,488
            ,458
            ,389
            ,253
            ,287
            ,469
            ,415
            ,406
            ,314
            ,337
            ,281
            ,343
            ,560
            ,574
            ,561
            ,535
            ,377
            ,310
            ,402
            ,546
            ,552
            ,594
            ,554
            ,442
            ,300
            ,391
            ,478
            ,477
            ,447
            ,415
            ,320
            ,175
            ,178
            ,321
            ,281
            ,175
            ,145
            ,197
            ,160
            ,183
            ,244
            ,252
            ,182
            ,161
            ,258
            ,150
            ,223
            ,356
            ,385
            ,393
            ,350
            ,278
            ,174
            ,220
            ,393
            ,382
            ,427
            ,388
            ,288
            ,185
            ,221
            ,394
            ,429
            ,434
            ,368
            ,284
            ,175
            ,270
            ,375
            ,411
            ,418
            ,464
            ,385
            ,214
            ,297
            ,499
            ,501
            ,477
            ,417
            ,393
            ,242
            ,335
            ,494
            ,521
            ,499
            ,509
            ,411
            ,242
            ,342
            ,471
            ,495
            ,500
            ,496
            ,380
            ,254
            ,361
            ,542
            ,570
            ,587
            ,561
            ,483
            ,283
            ,387
            ,556
            ,535
            ,603
            ,533
            ,448
            ,325
            ,364
            ,578
            ,576
            ,596
            ,580
            ,486
            ,313
            ,424
            ,579
            ,581
            ,585
            ,551
            ,454
            ,308
            ,398
            ,618
            ,594
            ,605
            ,571
            ,500
            ,360
            ,408
            ,599
            ,604
            ,591
            ,504
            ,416
            ,295
            ,371
            ,559
            ,648
            ,614
            ,633
            ,516
            ,318
            ,456
            ,698
            ,693
            ,686
            ,689
            ,566
            ,397
            ,475
            ,765
            ,686
            ,715
            ,696
            ,542
            ,385
            ,501
            ,754
            ,780
            ,760
            ,636
            ,502
            ,402
            ,445
            ,709
            ,702
            ,709
            ,679
            ,542
            ,393
            ,479
            ,695
            ,670
            ,668
            ,597
            ,509
            ,345
            ,388
            ,632
            ,618
            ,585
            ,596
            ,506
            ,299
            ,354
            ,486
            ,564
            ,651
            ,622
            ,466
            ,283
            ,366
            ,622
            ,583
            ,604
            ,521
            ,455
            ,337
            ,355
            ,589
            ,607
            ,639
            ,628
            ,428
            ,255
            ,342
            ,579
            ,544
            ,545
            ,569
            ,468
            ,241
            ,317
            ,553
            ,573
            ,541
            ,520
            ,432
            ,197
            ,293
            ,522
            ,538
            ,479
            ,468
            ,363
            ,204
            ,229
            ,484
            ,523
            ,528
            ,467
            ,436
            ,201
            ,276
            ,542
            ,505
            ,548
            ,484
            ,362
            ,197
            ,266
            ,469
            ,525
            ,556
            ,500
            ,422
            ,213
            ,276
            ,562
            ,501
            ,501
            ,503
            ,411
            ,239
            ,285
            ,531
            ,525
            ,511
            ,489
            ,401
            ,245
            ,266
            ,545
            ,525
            ,560
            ,506
            ,409
            ,239
            ,289
            ,473
            ,532
            ,504
            ,524
            ,432
            ,197
            ,260
            ,515
            ,541
            ,552
            ,498
            ,415
            ,204
            ,270
            ,470
            ,532
            ,481
            ,541
            ,375
            ,216
            ,266
            ,391
            ,548
            ,536
            ,504
            ,417
            ,206
            ,259
            ,483
            ,521
            ,454
            ,504
            ,404
            ,235
            ,264
            ,537
            ,536
            ,484
            ,482
            ,402
            ,238
            ,311
            ,519
            ,563
            ,521
            ,489
            ,402
            ,251
            ,333
            ,567
            ,603
            ,584
            ,577
            ,475
            ,256
            ,353
            ,547
            ,623
            ,645
            ,577
            ,495
            ,317
            ,384
            ,649
            ,661
            ,584
            ,616
            ,506
            ,331
            ,422
            ,656
            ,645
            ,652
            ,652
            ,542
            ,324
            ,466
            ,657
            ,674
            ,646
            ,652
            ,525
            ,348
            ,419
            ,716
            ,660
            ,650
            ,648
            ,535
            ,348
            ,447
            ,678
            ,708
            ,704
            ,679
            ,528
            ,345
            ,503
            ,693
            ,665
            ,621
            ,491
            ,461
            ,322
            ,522
            ,753
            ,716
            ,790
            ,749
            ,620
            ,428
            ,578
            ,833
            ,798
            ,800
            ,748
            ,617
            ,427
            ,516
            ,724
            ,658
            ,640
            ,598
            ,447
            ,232
            ,285
            ,429
    };

    private static double[] money3 = new double[]{
            61.9408
            ,61.8215
            ,62.3033
            ,61.9164
            ,61.7684
            ,61.7354
            ,62.5229
            ,63.0066
            ,62.7148
            ,63.2012
            ,63.4860
            ,61.9997
            ,62.7260
            ,62.6027
            ,61.7494
            ,61.6644
            ,61.7655
            ,61.3222
            ,60.8583
            ,61.5539
            ,61.1454
            ,62.2794
            ,61.4311
            ,62.0659
            ,64.0626
            ,62.3699
            ,58.5714
            ,57.8332
            ,57.5796
            ,57.7646
            ,57.5375
            ,57.2850
            ,57.2649
            ,57.7626
            ,57.5598
            ,57.1747
            ,57.0039
            ,57.1072
            ,56.8391
            ,57.4954
            ,57.7033
            ,57.5521
            ,57.4942
            ,57.0188
            ,56.9372
            ,56.9359
            ,56.6122
            ,56.8011
            ,56.5041
            ,57.1000
            ,56.6616
            ,56.4334
            ,56.3742
            ,55.6717
            ,55.9208
            ,56.7608
            ,56.6537
            ,56.5201
            ,56.3438
            ,56.3554
            ,56.5918
            ,57.5899
            ,57.7701
            ,58.0171
            ,58.1718
            ,57.6736
            ,56.9533
            ,57.2196
            ,56.6278
            ,56.0408
            ,56.2613
            ,56.1840
            ,56.2914
            ,56.2908
            ,55.8288
            ,55.9288
            ,56.3888
            ,56.4115
            ,56.6261
            ,56.5892
            ,56.7597
            ,56.5925
            ,56.3878
            ,56.3569
            ,56.6019
            ,56.9957
            ,56.8734
            ,57.0463
            ,57.6002
            ,57.6291
            ,57.4544
            ,57.7343
            ,58.1989
            ,58.3152
            ,58.5596
            ,58.7170
            ,58.6117
            ,58.6940
            ,58.8987
            ,58.7082
            ,59.1446
            ,58.8370
            ,59.2348
            ,59.2811
            ,59.2948
            ,58.9281
            ,58.6924
            ,58.9911
            ,58.5182
            ,58.5814
            ,58.3311
            ,58.4125
            ,58.2773
            ,58.5318
            ,58.4622
            ,59.0061
            ,59.4604
            ,59.2746
            ,59.6325
            ,59.9898
            ,60.2490
            ,59.6207
            ,59.1823
            ,59.2808
            ,59.2527
            ,59.2480
            ,58.4557
            ,58.4296
            ,58.0869
            ,58.1557
            ,58.1179
            ,57.8716
            ,58.0833
            ,57.7643
            ,57.6140
            ,57.5852
            ,57.4706
            ,57.5118
            ,57.5706
            ,57.2721
            ,57.3392
            ,57.0861
            ,57.6196
            ,57.6869
            ,57.9210
            ,58.0713
            ,58.3151
            ,57.7612
            ,57.5811
            ,57.7832
            ,57.9375
            ,57.8134
            ,58.0169
            ,58.4255
            ,58.0102
            ,57.5186
            ,57.5660
            ,57.6527
            ,58.2242
            ,58.1290
            ,58.0993
            ,57.6242
            ,57.5336
            ,57.7706
            ,57.6679
            ,57.2656
            ,57.1694
            ,56.9966
            ,57.1411
            ,57.3387
            ,57.8503
            ,57.7817
            ,58.0557
            ,58.5454
            ,58.7306
            ,58.5320
            ,58.5469
            ,59.1476
            ,59.1397
            ,59.1312
            ,59.0396
            ,59.1409
            ,59.3612
            ,59.2490
            ,59.6521
            ,59.9266
            ,59.7990
            ,60.1873
            ,59.9298
            ,59.9611
            ,59.9886
            ,60.0605
            ,60.3281
            ,60.7503
            ,60.5819
            ,59.8454
            ,60.0633
            ,59.5436
            ,59.4102
            ,59.9102
            ,59.8185
            ,59.6572
            ,58.9325
            ,59.0823
            ,59.2418
            ,59.3705
            ,59.0657
            ,59.8806
            ,60.1836
            ,60.6227
            ,60.7397
            ,60.3014
            ,60.3792
            ,60.2426
            ,59.5787
            ,59.2295
            ,58.9695
            ,59.3862
            ,59.0855
            ,59.5415
            ,58.8843
            ,59.0014
            ,59.6564
            ,60.1482
            ,60.0000
            ,58.5786
            ,57.9585
            ,57.7408
            ,57.4437
            ,57.0303
            ,56.9096
            ,57.0020
            ,56.9857
            ,56.5878
            ,56.6747
            ,56.6152
            ,56.6876
            ,56.5373
            ,56.6876
            ,56.5168
            ,56.7106
            ,56.7560
            ,56.0701
            ,56.2743
            ,56.5552
            ,56.4988
            ,57.1602
            ,57.4683
            ,56.7383
            ,56.2603
            ,56.5258
            ,57.1640
            ,57.1161
            ,58.0824
            ,58.5382
            ,57.5714
            ,57.0927
            ,56.9518
            ,56.9838
            ,56.9707
            ,56.3131
            ,55.8453
            ,56.0794
            ,56.2307
            ,56.4165
            ,56.1753
            ,55.9793
            ,56.2505
            ,56.2945
            ,56.6019
            ,56.7556
            ,56.9552
            ,57.3896
            ,56.9201
            ,56.4369
            ,55.8940
            ,56.5553
            ,56.1396
            ,55.9606
            ,56.3779
            ,57.0241
            ,56.9364
            ,57.0233
            ,57.4247
            ,57.5228
            ,57.6360
            ,57.2323
            ,57.2847
            ,57.9344
            ,58.2437
            ,59.1128
            ,58.9540
            ,59.1327
            ,59.2174
            ,58.8318
            ,58.2630
            ,58.3370
            ,58.9099
            ,58.4067
            ,58.3776
            ,57.9627
            ,57.9371
            ,57.4762
            ,57.8590
            ,58.0967
            ,57.6342
            ,57.1507
            ,56.7719
            ,57.7388
            ,58.0619
            ,58.8457
            ,59.0235
            ,59.5129
            ,59.1933
            ,58.7121
            ,59.3137
            ,59.9858
            ,60.3099
            ,60.0851
            ,60.1618
            ,60.3196
            ,59.6356
            ,59.1489
            ,59.2168
            ,59.5034
            ,59.6697
            ,59.3521
            ,59.1830
            ,59.4015
            ,59.6067
            ,59.3700
            ,59.4978
            ,60.1614
            ,59.9533
            ,59.8961
            ,60.6569
            ,60.2730
            ,60.6669
            ,60.8587
            ,60.9084
            ,60.8528
            ,60.8641
            ,61.1092
            ,61.7967
            ,61.7931
            ,61.7515
            ,61.6368
            ,60.8079
            ,61.0690
            ,61.5804
            ,63.3028
            ,63.3901
            ,63.9114
            ,63.8741
            ,63.9242
            ,64.1528
            ,63.6807
            ,65.2382
            ,64.9449
            ,64.9153
            ,64.6174
            ,64.6279
            ,64.0087
            ,63.6282
            ,64.3580
            ,65.1023
            ,64.9154
            ,64.5463
            ,65.5548
            ,65.8591
            ,65.2167
            ,63.4161
            ,63.8928
            ,63.7364
            ,63.9074
            ,63.5043
            ,63.4166
            ,63.2025
            ,63.2174
            ,62.9037
            ,63.0399
            ,62.2597
            ,62.0480
            ,62.2349
            ,62.4499
            ,62.4194
            ,62.5841
            ,62.8900
            ,63.1510
            ,62.9934
            ,63.3465
            ,62.5892
            ,62.1946
            ,62.3884
            ,62.3031
            ,62.3900
            ,62.4583
            ,62.4323
            ,62.5477
            ,63.3960
            ,63.1581
            ,63.9509
            ,63.6921
            ,64.1506
            ,63.8642
            ,63.7942
            ,64.4424
            ,64.7513
            ,64.9173
            ,64.9940
            ,65.2170
            ,64.9737
            ,64.8102
            ,65.0539
            ,64.1617
            ,63.9730
            ,64.3804
            ,64.8306
            ,64.7644
            ,65.8684
            ,65.2566
            ,65.2535
            ,64.9072
            ,65.0810
            ,64.7380
            ,64.9459
            ,64.8140
            ,64.7684
            ,64.2078
            ,63.9391
            ,63.5487
            ,63.9943
            ,63.9514
            ,64.2076
            ,64.3364
            ,64.9497
            ,64.8137
            ,64.7848
            ,65.0799
            ,65.5627
            ,66.3941
            ,66.7420
            ,66.8816
            ,65.9553
            ,67.0512
            ,66.1125
            ,65.9467
            ,65.7408
            ,64.9184
            ,64.6270
            ,63.7373
            ,63.4183
            ,62.9891
            ,63.1154
            ,63.1697
            ,63.5773
            ,63.8531
            ,63.9029
            ,64.2024
            ,64.2488
            ,64.0500
            ,64.6304
            ,64.2676
            ,63.6844
            ,64.0165
            ,64.1755
            ,64.2575
            ,64.8095
            ,65.0588
            ,65.5287
            ,64.3212
            ,63.7162
            ,64.1743
            ,64.1509
            ,65.4398
            ,65.8618
            ,65.9156
            ,66.0306
            ,64.7077
            ,63.7402
            ,64.6797
            ,65.2089
            ,65.7894
            ,66.8529
            ,66.7491
            ,66.6156
            ,65.9962
            ,66.0825
            ,66.0413
            ,65.2062
            ,65.8949
            ,67.0493
            ,67.0475
            ,66.3775
            ,66.2110
            ,65.0641
            ,64.5138
            ,64.8895
            ,64.9306
            ,64.9607
            ,66.2428
            ,66.3277
            ,66.1928
            ,65.8918
            ,66.1718
            ,64.3334
            ,65.1133
            ,65.1618
            ,66.4559
            ,66.6295
            ,66.2198
            ,65.0254
            ,66.0364
            ,65.6474
            ,68.2724
            ,66.0452
            ,66.4954
            ,65.7662
            ,66.3456
            ,67.1250
            ,67.4662
            ,67.7960
            ,68.5215
            ,68.8901
            ,68.6753
            ,67.1410
            ,67.8552
            ,67.6076
            ,68.7549
            ,67.7807
            ,68.4346
            ,68.9328
            ,67.6409
            ,67.7764
            ,68.8086
            ,68.4026
            ,68.5598
            ,71.0256
            ,70.5408
            ,70.1542
            ,70.3067
            ,71.0928
            ,72.3775
            ,73.1854
            ,73.8242
            ,73.6256
            ,74.0536
            ,75.8994
            ,75.0903
            ,76.3929
            ,76.3928
            ,77.1326
            ,76.3657
            ,75.4575
            ,77.8503
            ,76.2450
            ,77.7792
            ,79.4951
            ,79.1144
            ,79.0689
            ,78.6805
            ,76.8614
            ,77.3409
            ,76.4609
            ,79.2593
            ,77.9273
            ,76.3264
            ,75.1723
            ,77.3674
            ,78.9969
            ,81.8394
            ,77.7965
            ,80.5714
            ,83.5913
            ,79.4614
            ,78.4862
            ,78.6678
            ,76.5650
            ,76.5230
            ,76.4275
            ,76.6041
            ,75.9507
            ,72.9299
            ,72.8827
            ,72.5066
            ,70.7865
            ,70.2690
            ,69.5165
            ,70.9333
            ,71.1211
            ,71.2553
            ,71.3215
            ,70.5806
            ,70.4012
            ,70.8295
            ,70.2244
            ,69.1755
            ,69.2151
            ,69.2000
            ,69.3026
            ,68.5156
            ,67.6698
            ,67.7691
            ,66.7402
            ,66.2584
            ,66.7370
            ,66.2393
            ,65.6836
            ,65.4789
            ,65.6210
            ,65.5973
            ,64.8673
            ,64.9120
            ,64.7785
            ,65.4799
            ,66.4607
            ,66.6343
            ,65.4541
            ,64.5693
            ,64.3908
            ,64.6606
            ,63.6832
            ,63.3991
            ,63.8525
            ,63.7993
            ,64.3742
            ,64.1686
            ,65.3159
            ,63.5004
            ,62.5038
            ,61.9286
            ,62.7888
            ,62.6309
            ,62.1620
            ,61.4419
            ,61.3587
            ,62.2433
            ,63.1248
            ,62.2237
            ,61.1535
            ,61.2967
            ,62.2942
            ,62.7061
            ,65.0962
            ,65.6248
            ,65.9414
            ,65.0336
            ,65.7364
            ,66.2367
            ,65.5470
            ,65.6727
            ,66.5151
            ,66.0410
            ,66.1747
            ,66.1455
            ,65.6445
            ,65.3623
            ,65.9273
            ,67.1574
            ,67.9571
            ,68.0093
            ,68.4961
            ,67.6219
            ,68.7932
            ,68.4864
            ,67.6850
            ,67.0102
            ,66.6756
            ,65.3495
            ,66.7152
            ,66.4779
            ,67.4473
            ,69.3142
            ,69.9461
            ,70.7465
            ,68.1216
            ,66.9608
            ,65.7222
            ,65.8289
            ,65.5034
            ,64.9363
            ,63.9988
            ,65.0169
            ,63.2098
            ,64.4977
            ,63.8399
            ,63.8644
            ,62.7184
            ,62.9182
            ,62.4677
            ,60.3458
            ,58.9906
            ,59.7665
            ,60.2231
            ,58.7816
            ,58.0374
            ,57.3578
            ,57.0232
            ,57.0025
            ,56.8336
            ,56.8423
            ,56.9504
            ,56.6642
            ,56.9774
            ,56.6079
            ,56.6685
            ,56.9803
            ,57.2174
            ,57.2192
            ,56.4112
            ,55.6049
            ,55.6555
            ,55.4756
            ,55.8413
            ,55.5240
            ,54.8126
            ,54.6026
            ,54.0746
            ,54.2081
            ,53.5569
            ,53.8006
            ,53.3301
            ,53.8999
            ,54.0409
            ,55.2679
            ,54.5285
            ,54.8219
            ,55.9100
            ,56.0435
            ,56.2463
            ,54.9908
            ,53.0590
            ,53.4413
            ,52.8213
            ,52.9716
            ,52.2907
            ,51.0178
            ,50.3223
            ,49.8613
            ,49.7901
            ,49.9204
            ,49.7919
            ,49.1777
            ,49.2175
            ,50.0115
            ,50.0774
            ,49.5366
            ,50.9140
            ,50.7511
            ,50.3615
            ,49.9816
            ,51.7574
            ,51.1388
            ,51.7029
            ,52.3041
            ,51.4690
            ,50.2473
            ,51.6011
            ,53.6555
            ,53.9728
            ,51.5207
            ,50.5295
            ,49.6749
            ,50.5033
            ,51.9749
            ,52.4220
            ,51.0678
            ,52.5424
            ,54.0270
            ,55.3328
            ,56.5161
            ,56.7534
            ,56.9902
            ,58.3536
            ,57.6500
            ,58.4643
            ,57.7279
            ,56.4271
            ,57.3879
            ,58.7710
            ,59.4452
            ,60.0341
            ,59.8308
            ,61.3483
            ,61.7510
            ,62.1497
            ,61.3167
            ,60.9595
            ,62.6797
            ,60.6649
            ,59.9938
            ,61.8457
            ,61.8745
            ,62.3649
            ,62.2248
            ,61.2718
            ,60.7109
            ,62.5906
            ,63.5083
            ,61.7235
            ,62.1307
            ,62.4001
            ,62.8353
            ,62.6632
            ,65.0862
            ,66.0994
            ,66.0585
            ,65.4469
            ,65.7817
            ,66.0432
            ,68.6113
            ,65.4470
            ,67.7727
            ,69.6640
            ,68.9291
            ,68.7303
            ,67.1506
            ,67.8153
            ,65.5937
            ,63.3930
            ,65.4000
            ,65.5558
            ,64.9862
            ,64.9732
            ,65.1738
            ,64.8337
            ,66.0983
            ,64.8425
            ,62.7363
            ,56.2376
            ,56.2584
            ,56.6801
            ,52.0343
            ,52.6159
            ,54.4913
            ,54.5687
            ,56.4940
            ,60.6825
            ,59.6029
            ,67.7851
            ,61.1512
            ,58.3461
            ,56.8919
            ,54.7932
            ,54.2758
            ,54.2116
            ,53.3079
            ,53.1088
            ,52.6932
            ,54.3821
            ,50.7678
            ,51.8068
    };

    public static void main(String[] args) throws IOException {
        //params
        int inputVectorSize = 11;
        //int outputVectorSize = 1;
        int hiddenLayerSize = 20;
        double n = 0.01;
        int maxEpoch = 1000;
        double errorMin = 0.01;
        double trainTestSplit = 0.8;
        //input start
        List<Double> inputParams = new ArrayList<>();
        List<Double> inputParamsChart = new ArrayList<>();
        List<Double> xAxis = new ArrayList<>();
        double[] input = money3;
        double[] inputCopy = Arrays.copyOf(input, input.length);
        Arrays.parallelSort(inputCopy);
        double minOfInput = inputCopy[0];
        double sum = 0;
        for (int i = 0; i < 750; i++) {
            sum += input[i];
        }
        double maxOfInput = inputCopy[input.length - 1];
        for (int i = 0; i < input.length; i++) {
            inputParams.add((input[i])); //- minOfInput) / (maxOfInput - minOfInput));//(Math.sin(i * 0.2) + Math.sin(i * 0.4) + 1) / 3);
            inputParamsChart.add(input[i]);
            xAxis.add((double)i); //* 0.2);
        }
        XYChart chart = QuickChart.getChart("error", "epoch", "errorVal", "error", xAxis, inputParamsChart);
        new SwingWrapper<XYChart>(chart).displayChart();
        /*BufferedReader bfr = new BufferedReader(new FileReader(args[0]));
        String line = bfr.readLine();
        while (line != null){
            try {
                inputParams.add(Double.parseDouble(line));
            } finally {
                line = bfr.readLine();
            }
        }*/

        int inputVectorsCount = inputParams.size() - (inputVectorSize + 1) + 1;
        double[][] inputVectors = new double[inputVectorsCount][inputVectorSize];
        double[] expectedOutput = new double[inputVectorsCount];
        for (int i = 0; i < inputVectorsCount; i++) {
            for (int j = 0; j < inputVectorSize; j++) {
                inputVectors[i][j] = inputParams.get(i + j);
            }
            expectedOutput[i] = inputParams.get(i + inputVectorSize);
        }
        //normalization
        List<Double> normalizedExpected = new ArrayList<>();
        double[] norm_sums = new double[inputVectorsCount];
        for (int i = 0; i < inputVectorsCount; i++) {
            double norm_sum = 0;
            for (int j = 0; j < inputVectorSize; j++) {
                norm_sum += Math.pow(inputVectors[i][j], 2);
            }
            norm_sum += Math.pow(expectedOutput[i], 2);
            norm_sum = Math.sqrt(norm_sum);
            for (int j = 0; j < inputVectorSize; j++) {
                inputVectors[i][j] /= norm_sum;
            }
            expectedOutput[i] /= norm_sum;
            normalizedExpected.add(expectedOutput[i]);
            norm_sums[i] = norm_sum;
        }
        int trainSize = (int)(trainTestSplit * inputVectorsCount);
        int testSize = inputVectorsCount - trainSize;
        double[][] trainInputVects = new double[trainSize][inputVectorSize];
        double[] trainExpectedOutput = new double[trainSize];
        double[][] testInputVects = new double[testSize][inputVectorSize];
        double[] testExpectedOutput = new double[testSize];
        for (int i = 0; i < trainSize; i++) {
            trainInputVects[i] = inputVectors[i];
            trainExpectedOutput[i] = expectedOutput[i];
        }
        for (int i = 0; i < testSize; i++) {
            testInputVects[i] = inputVectors[trainSize + i];
            testExpectedOutput[i] = expectedOutput[trainSize + i];
        }
        double[][] initInputVects = new double[hiddenLayerSize][inputVectorSize];
        //Select vectors to init hidden layer
        //randoms from withing list
        //Random rng = new Random();
        //just any
        List<Integer> indexes = new ArrayList<>();
        for (int i = 0; i < testSize; i++) {
            indexes.add(i);
        }
        //minmax of sections
        indexes = new ArrayList<>();
        int sections = hiddenLayerSize / 2 + hiddenLayerSize % 2;
        int maxTotal = trainSize - inputVectorSize;
        int sectionSize = maxTotal / sections;
        for (int i = 0; i < sections; i++) {
            int sectionMinI = sectionSize * i;
            int sectionMaxI = sectionSize * i;
            for (int j = 0; j < sectionSize; j++) {
                if (inputParams.get(sectionMinI) > inputParams.get(j + i * sectionSize)) {
                    sectionMinI = j + i * sectionSize;
                }
                if (inputParams.get(sectionMinI) < inputParams.get(j + i * sectionSize)) {
                    sectionMaxI = j + i * sectionSize;
                }
            }
            //work on this, there is bug
            int indexOfStartMin = sectionMinI - inputVectorSize / 2;
            int indexOfStartMax = sectionMaxI + inputVectorSize / 2;
            if (indexOfStartMin < 0) indexOfStartMin = 0;
            if (indexOfStartMax >= trainSize) indexOfStartMax = trainSize - 1;
            indexes.add(indexOfStartMin);
            indexes.add(indexOfStartMax);
        }
        Collections.shuffle(indexes);
        for (int i = 0; i < hiddenLayerSize; i++) {
            double[] randVect = trainInputVects[indexes.get(i)];//new double[inputVectorSize];
            /*for (int j = 0; j < inputVectorSize; j++) {
               randVect[j] = Math.random() * (maxOfInput - minOfInput) + minOfInput;
            }*/
            initInputVects[i] = randVect;// trainInputVects[rng.nextInt(trainSize)];
        }
        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        RBNbasic net = new RBNbasic(inputVectorSize, hiddenLayerSize);
        net.initCenters(initInputVects, trainInputVects);
        net.initW();
        net.train(trainInputVects, trainExpectedOutput, maxEpoch, n, errorMin);
        //net.outWeights[0] += 0.075;
        //evaluate Results

        double error = 0;
        for (int i = 0; i < testSize; i++) {
            double res = net.f(testInputVects[i]);
            System.out.println("RESULT: " + /*(*/res /* * (maxOfInput - minOfInput) + minOfInput)*/ + " EXPECTED: " + testExpectedOutput[i] /*  (maxOfInput - minOfInput) + minOfInput*/);
            error += Math.pow(expectedOutput[i] - net.f(inputVectors[i]), 2);
        }
        error /= testSize - 1;
        error = Math.sqrt(error);
        System.out.println("Error: " + error);
        System.out.println("Scaled Error: " + error * (maxOfInput - minOfInput));
        List<Double> resultTrend = new ArrayList<>();
        List<Double> resultTrendRescaled = new ArrayList<>();
        List<Double> xAxis2 = new ArrayList<>();
        double[] currentInput = new double[inputVectorSize];
        for (int i = 0; i < inputVectorSize; i++) {
            currentInput[i] = trainInputVects[trainSize - 1][i];
        }
        double current_norm_sum = norm_sums[trainSize - 1];
        for (int i = trainSize - 1; i < expectedOutput.length; i++) {
            double res = net.f(currentInput);
            double new_norm_sum = 0;
            for (int j = 0; j < inputVectorSize; j++) {
                new_norm_sum += Math.pow(currentInput[j] * current_norm_sum, 2);
            }
            new_norm_sum += Math.pow(res * current_norm_sum, 2);
            new_norm_sum = Math.sqrt(new_norm_sum);
            for (int j = 0; j < inputVectorSize - 1; j++) {
                currentInput[j] = currentInput[j + 1];
            }
            currentInput[inputVectorSize - 1] = res;
            resultTrend.add(res);
            resultTrendRescaled.add(res * current_norm_sum);
            System.out.println("RESTREND EXPECTED: " + expectedOutput[i] + " RESULT: " + res);
            System.out.println("DENORM RESTREND EXPECTED: " + expectedOutput[i] * norm_sums[i] + " RESULT: " + res * current_norm_sum);
            xAxis2.add((double)i + inputVectorSize);// * 0.2);
            for (int j = 0; j < inputVectorSize; j++) {
                currentInput[j] = currentInput[j] * current_norm_sum;
                currentInput[j] = currentInput[j] / new_norm_sum;
            }
            current_norm_sum = new_norm_sum;
        }
        List<Double> resTrend3 = new ArrayList<>();
        List<Double> xAxis3 = new ArrayList<>();
        List<Double> resTrend3Rescaled = new ArrayList<>();
        for (int i = 0; i < inputVectorsCount; i++) {
            System.out.println("Vector " + i + " Expected " + expectedOutput[i] + " Result " + net.f(inputVectors[i]));
            xAxis3.add((double) (i + inputVectorSize));
            resTrend3.add(net.f(inputVectors[i]));
            resTrend3Rescaled.add(net.f(inputVectors[i]) * norm_sums[i]);
        }

        if (false) {
            //for(int k = 0; k < testSize / 5; k++) {
            for (int i = 0; i < inputVectorSize; i++) {
                currentInput[i] = trainInputVects[trainSize - 1][i];//inputParams.get(/*k * 5*/ + trainSize - 1 + i);
            }
            for (int i = /*k * 5 + */trainSize + inputVectorSize - 1; i < /*k * 5 + trainSize + inputVectorSize - 1 + 5*/inputParams.size(); i++) {
                double res = net.f(currentInput);
                for (int j = 0; j < inputVectorSize - 1; j++) {
                    currentInput[j] = currentInput[j + 1];
                }
                currentInput[inputVectorSize - 1] = res;//inputParams.get(i);
                resultTrend.add(res);
                xAxis2.add((double) i);// * 0.2);
                System.out.println("PREDICT CHAIN RES: " + res + " EXPECTED: " + inputParams.get(i));
            }
        }
        //}
        /*for (int i = 0; i < inputVectorSize; i++) {
            currentInput[i] = inputParams.get(i);
        }
        for (int i = inputVectorSize; i < inputParams.size(); i++) {
            double res = net.f(currentInput);
            for (int j = 0; j < inputVectorSize - 1; j++) {
                currentInput[j] = currentInput[j + 1];
            }
            currentInput[inputVectorSize - 1] = res;//inputParams.get(i);
            resultTrend.add(res);
            xAxis2.add((double)i);// * 0.2);
        }*/
        //XYChart chart2 = QuickChart.getChart("error", "epoch", "errorVal", "error", xAxis2, resultTrend);
        //new SwingWrapper<XYChart>(chart2).displayChart();
        XYChart chart3 = new XYChart(800, 600);
        chart3.setTitle("result");
        chart3.setXAxisTitle("valueId");
        chart3.setYAxisTitle("value");
        //chart3.addSeries("input", xAxis, inputParams).setMarker(SeriesMarkers.NONE);
        chart3.addSeries("norminput", xAxis3, normalizedExpected).setMarker(SeriesMarkers.NONE);
        chart3.addSeries("sideBySide", xAxis3, resTrend3).setMarker(SeriesMarkers.NONE);
        chart3.addSeries("testRes", xAxis2, resultTrend).setMarker(SeriesMarkers.NONE);
        new SwingWrapper<XYChart>(chart3).displayChart();

        XYChart chart4 = new XYChart(800, 600);
        chart4.setTitle("result");
        chart4.setXAxisTitle("valueId");
        chart4.setYAxisTitle("value");
        //chart3.addSeries("input", xAxis, inputParams).setMarker(SeriesMarkers.NONE);
        chart4.addSeries("input", xAxis, inputParams).setMarker(SeriesMarkers.NONE);
        chart4.addSeries("sideBySide", xAxis3, resTrend3Rescaled).setMarker(SeriesMarkers.NONE);
        chart4.addSeries("testRes", xAxis2, resultTrendRescaled).setMarker(SeriesMarkers.NONE);
        new SwingWrapper<XYChart>(chart4).displayChart();
        //derivTest
        int testVectId = 10;
        for (int i = 0; i < hiddenLayerSize; i++) {
            double val1 = net.wDeriv(i, inputVectors[testVectId]);
            net.outWeights[i + 1] += 0.001;
            double val21 = net.f(inputVectors[testVectId]);
            net.outWeights[i + 1] -= 0.002;
            double val22 = net.f(inputVectors[testVectId]);
            net.outWeights[i + 1] += 0.001;
            double val2 = (val21 - val22)/0.002;
            System.out.println("derivates for w i: " + i + " calced: " + val2 + " derived: " + val1);
        }

        /*for (int i = 0; i < hiddenLayerSize; i++) {
            for (int j = 0; j < inputVectorSize; j++) {
                double val1 = net.centerDeriv(i, j, inputVectors[testVectId]);
                net.centers[i][j] += 0.001;
                double val21 = net.f(inputVectors[testVectId]);
                net.centers[i][j] -= 0.002;
                double val22 = net.f(inputVectors[testVectId]);
                net.centers[i][j] += 0.001;
                double val2 = (val21 - val22)/0.002;
                System.out.println("derivates for center i: " + i + " j: " + j + " calced: " + val2 + " derived: " + val1);
            }
        }

        for (int i = 0; i < hiddenLayerSize; i++) {
            for (int r = 0; r < inputVectorSize; r++) {
                //for (int j = 0; j < inputVectorSize; j++) {
                    double val1 = net.QDeriv(i, r, r, inputVectors[testVectId]);
                    net.correlationMatrices[i][r][r] += 0.001;
                    double val21 = net.f(inputVectors[testVectId]);
                    net.correlationMatrices[i][r][r] -= 0.002;
                    double val22 = net.f(inputVectors[testVectId]);
                    net.correlationMatrices[i][r][r] += 0.001;
                    double val2 = (val21 - val22) / 0.002;
                    System.out.println("derivates for Q i: " + i + " r: " + r + " j: " + r + " calced: " + val2 + " derived: " + val1);
                //}
            }
        }*/
    }
}
