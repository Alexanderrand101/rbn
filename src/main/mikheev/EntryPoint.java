package mikheev;

import org.knowm.xchart.QuickChart;
import org.knowm.xchart.SwingWrapper;
import org.knowm.xchart.XYChart;
import org.knowm.xchart.internal.ChartBuilder;
import org.knowm.xchart.style.markers.SeriesMarkers;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;

public class EntryPoint {

    public static final double[] in = new double[]{
            91.25,
            91.57,
            91.90,
            91.58,
            91.67,
            92.10,
            92.26,
            92.07,
            91.61,
            90.74,
            90.74,
            90.15,
            90.31,
            90.30,
            90.37,
            90.19,
            89.92,
            89.01,
            89.23,
            88.89,
            89.13,
            89.00,
            88.95,
            88.51,
            89.04,
            89.41,
            89.45,
            90.12,
            90.12,
            90.33,
            90.10,
            89.59,
            89.01,
            88.51,
            89.01,
            89.01,
            89.64,
            89.91,
            89.66,
            89.81,
            89.79,
            90.28,
            90.55,
            90.28,
            89.91,
            90.04,
            89.59,
            89.61,
            90.16,
            90.07,
            89.87,
            89.64,
            89.69,
            90.13,
            90.21,
            89.98,
            89.95,
            89.37,
            89.47,
            89.03,
            88.60,
            88.98,
            89.72,
            89.81,
            89.71,
            89.86,
            89.78,
            90.15,
            89.78,
            89.53,
            89.28,
            89.25,
            89.46,
            89.50,
            89.14,
            89.23,
            89.35,
            89.70,
            90.08,
            90.71,
            90.54,
            90.95,
            91.37,
            91.34,
            91.63,
            92.26,
            92.34,
            92.25,
            92.41,
            92.59,
            92.96,
            92.88,
            92.52,
            92.41,
            92.46,
            93.09,
            93.28,
            93.38,
            93.54,
            93.58,
            93.53,
            93.92,
            93.70,
            94.13,
            94.13,
            94.79,
            94.12,
            93.96,
            94.17,
            93.99,
            93.87,
            93.63,
            93.38,
            93.54,
            93.56,
            93.80,
            93.70,
            94.78,
            94.78,
            94.86,
            94.73,
            94.72,
            94.40,
            94.18,
            93.94,
            94.35,
            94.97,
            95.10,
            94.35,
            94.78,
            94.41,
            94.41,
            94.22,
            93.77,
            93.81,
            93.89,
            94.49,
            94.56,
            94.50,
            94.27,
            94.70,
            94.81,
            94.94,
            94.23,
            94.44,
            94.39,
            94.13,
            94.54,
            94.46,
            94.11,
            94.28,
            94.43,
            94.99,
            94.96,
            95.19,
            95.05,
            94.89,
            95.36,
            96.22,
            96.25,
            96.61,
            96.58,
            96.54,
            95.98,
            95.79,
            95.15,
            95.05,
            95.58,
            95.06,
            94.68,
            94.64,
            94.52,
            94.68,
            95.08,
            95.08,
            95.38,
            95.12,
            94.99,
            95.33,
            95.11,
            95.23,
            94.77,
            94.52,
            94.93,
            94.49,
            94.23,
            94.12,
            93.49,
            93.80,
            93.78,
            93.71,
            93.77,
            94.52,
            94.74,
            94.93,
            95.14,
            95.41,
            95.41,
            95.31,
            95.44,
            95.35,
            95.18,
            94.71,
            94.91,
            94.75,
            94.75,
            95.30,
            95.64,
            95.44,
            95.75,
            95.71,
            96.18,
            96.46,
            96.13,
            96.35,
            96.79,
            96.90,
            96.08,
            96.34,
            96.08,
            96.12,
            95.81,
            96.55,
            96.73,
            97.38,
            97.14,
            96.66,
            96.79,
            96.33,
            96.07,
            96.72,
            96.59,
            96.59,
            96.83,
            96.98,
            97.28,
            96.68,
            96.70,
            97.20,
            96.97,
            96.90,
            97.01,
            96.76,
            96.48,
            97.18,
            97.36,
            97.02,
            97.06,
            97.43,
            97.18,
            96.57,
            96.48,
            95.73,
            96.46,
            96.01,
            96.57,
            96.00,
            95.97,
            95.74,
            96.42,
            95.88,
            95.75,
            95.23,
            95.48,
            94.79,
            95.12,
            95.27,
            95.21,
            95.68,
            95.68,
            95.71,
            95.99,
            95.99,
            95.96,
            95.77,
            96.30,
            95.47,
            95.42,
            95.52,
            95.03,
            95.30,
            95.30,
            95.57,
            95.82,
            96.15,
            96.29,
            96.42,
            96.86,
            96.50,
            96.94,
            96.81,
            96.74,
            96.74,
            96.35,
            96.29,
            96.46,
            96.37,
            96.27,
            95.87,
            96.04,
            96.04,
            96.45,
            96.61,
            96.80,
            96.80,
            97.63,
            97.27,
            97.17,
            96.90,
            96.51,
            96.77,
            96.59,
            96.52,
            95.83,
            95.20,
            95.99,
            96.15,
            96.07,
            96.23,
            96.28,
            96.76,
            96.85,
            96.80,
            96.92,
            96.66,
            96.93,
            97.00,
            96.65,
            96.61,
            96.56,
            96.81,
            96.60,
            96.56,
            96.65,
            96.66,
            97.15,
            96.96,
            97.32,
            97.86,
            97.92,
            97.73,
            97.58,
            97.20,
            97.41,
            97.59,
            97.26,
            97.27,
            97.40,
            97.39,
            97.16,
            97.13,
            97.12,
            97.32,
            97.38,
            97.68,
            97.82,
            97.76,
            97.90,
            97.88,
            97.72,
            97.48,
            97.48,
            97.84,
            98.04,
            98.05,
            97.67,
            97.06,
            97.00,
            97.25,
            97.00,
            96.49,
            96.71,
            96.65,
            96.97,
            97.00,
            97.57,
            97.40,
            97.15,
            96.58,
            96.14,
            95.72,
            95.49,
            95.65,
            95.73,
            95.74,
            95.67,
            96.41,
            96.27,
            96.33,
            96.33,
            96.89,
            96.98,
            97.10,
            96.70,
            96.67,
            96.42,
            96.55,
            97.04,
            96.85,
            96.45,
            96.82,
            96.94,
            97.42,
            97.45,
            97.55,
            97.75,
            97.80,
            97.81,
            98.26,
            98.14,
            97.85,
            97.31,
            97.42,
            97.35,
            97.43,
            97.32,
            97.20,
            97.63,
            97.83,
            98.01,
            98.01,
            98.22,
            98.06,
            98.18,
            98.06,
            97.53,
            97.99,
            97.91,
            98.12,
            98.46,
            98.86,
            98.86,
            98.95,
            98.39,
            98.38,
            98.36,
            98.25,
            98.31,
            98.63,
            98.31,
            98.26,
            98.63,
            97.82,
            98.13,
            97.85,
            98.14,
            98.22,
            97.93,
            98.66,
            98.77,
            98.76,
            99.02,
            98.78,
            98.69,
            98.54,
            98.49,
            98.67,
            98.82,
            98.82,
            98.41,
            98.01,
            98.17,
            98.00,
            97.72,
            97.34,
            97.01,
            97.05,
            97.26,
            97.24,
            97.41,
            97.60,
            97.52,
            97.47,
            97.44,
            97.15,
            97.04,
            97.37,
            97.81,
            97.76,
            97.99,
            98.20,
            98.03,
            98.15,
            98.23,
            98.02,
            97.87,
            97.66,
            97.74,
            97.81,
            97.90,
            98.18,
            98.24,
            98.17,
            98.29,
            98.29,
            98.20,
            97.79,
            97.68,
            97.60,
            97.37,
            97.66,
            97.61,
            97.39,
            97.06,
            97.38,
            97.17,
            96.97,
            96.78,
            96.96,
            96.96,
            97.27,
            97.24,
            97.25,
            97.12,
            96.55,
            96.41,
            96.06,
            96.53,
            96.52,
            96.35,
            96.70,
            97.00,
            97.16,
            97.08,
            97.06,
            97.09,
            96.96,
            97.06,
            97.36,
            97.36,
            97.29,
            97.30,
            97.48,
            97.65,
            97.77,
            97.84,
            97.82,
            97.71,
            97.21,
            97.63,
            97.81,
            98.16,
            98.38,
            98.57,
            98.71,
            98.59,
            98.92,
            98.96,
            99.00,
            99.00,
            99.33,
            99.60,
            99.78,
            99.19,
            99.28,
            98.90,
            98.94,
            98.46,
            98.08,
            97.32,
            97.12,
            97.31,
            96.79,
            95.93,
            94.87,
            96.39,
            96.49,
            97.46,
            98.76,
            98.24,
            99.80,
            101.54,
            103.61,
            103.50,
            103.24,
            102.25,
            101.00,
            99.45,
            98.54,
            99.28,
            99.09,
            99.75,
            100.27,
            100.68,
            100.76,
            99.91,
            100.17,
            99.50,
            99.34,
            98.89,
            99.49,
            100.10,
            99.84,
            100.06,
            100.37,
            100.53,
            100.54,
            100.43,
            100.10,
            99.93,
            99.64,
            99.03,
            99.10,
            99.57,
            99.76,
            100.14,
            99.91,
            99.77,
            100.27,
            99.96,
            100.29,
            100.51,
            100.43,
            99.68,
            99.37,
            99.14,
            99.40,
            99.89,
            99.89,
            98.91,
            99.06,
            98.37,
            98.34,
            97.82,
            97.66,
            97.26,
            96.66,
            96.92,
            96.61,
            96.32,
            95.95,
            96.74,
            97.31,
            96.98,
            96.93,
            97.14,
            97.40,
            97.58,
            96.99,
            96.61,
            97.13,
            97.39,
            97.40,
            97.50,
            97.35,
            97.16,
            97.30,
            97.30,
            96.68,
            96.84,
            96.37,
            96.67,
            96.61,
            96.41,
            96.21,
            96.04,
            96.32,
            95.89,
            95.77,
            95.06,
            94.93,
            94.65,
            94.38,
            93.62,
            93.65,
            93.43,
            93.01,
            93.32,
            93.51,
            93.38,
            92.85,
            92.77,
            93.41,
            93.57,
            93.60,
            93.41,
            93.32,
            93.09,
            92.85,
            92.26,
            92.88,
            92.78,
            93.24,
            93.29,
            93.02,
            93.00,
            92.99,
            92.38,
            92.13,
            92.34,
            92.83,
            92.73,
            92.72,
            92.72,
            93.44,
            93.26,
            93.33,
            93.32,
            92.91,
            93.09,
            93.23,
            92.97,
            92.95,
            93.68,
            94.02,
            94.44,
            94.39,
            94.68,
            94.30,
            93.93,
            93.93,
            93.76,
            93.91,
            93.55,
            93.74,
            93.68,
            93.65,
            93.07,
            93.10,
            93.54,
            93.37,
            93.86,
            93.68,
            93.43,
            93.05,
            92.60,
            92.96,
            92.77,
            93.04,
            92.93,
            93.41,
            93.98,
            94.04,
            94.15,
            93.56,
            93.41,
            92.52,
            92.23,
            92.72,
            92.74,
            93.02,
            92.96,
            92.75,
            92.63,
            92.40,
            92.31,
            92.28,
            92.40,
            92.49,
            92.22
    };

    private static double[] shampoo = new double[]{
            266.0
            ,145.9
            ,183.1
            ,119.3
            ,180.3
            ,168.5
            ,231.8
            ,224.5
            ,192.8
            ,122.9
            ,336.5
            ,185.9
            ,194.3
            ,149.5
            ,210.1
            ,273.3
            ,191.4
            ,287.0
            ,226.0
            ,303.6
            ,289.9
            ,421.6
            ,264.5
            ,342.3
            ,339.7
            ,440.4
            ,315.9
            ,439.3
            ,401.3
            ,437.4
            ,575.5
            ,407.6
            ,682.0
            ,475.3
            ,581.3
            ,646.9
    };

    private static double[] nvdia = new double[] {
            239.91
            ,236.07
            ,237.06
            ,239.93
            ,240.38
            ,243.02
            ,244.32
            ,251.98
            ,247.28
            ,245.57
            ,248.93
            ,249.28
            ,247.94
            ,250.05
            ,252.86
            ,250.48
            ,240.2
            ,247.97
            ,245.54
            ,245.81
            ,236.43
            ,240.33
            ,247.13
            ,250.76
            ,254.25
            ,251.59
            ,262.97
            ,267.89
            ,272.54
            ,270.78
            ,289.79
            ,296.57
            ,314.7
            ,308.7
            ,294.07
            ,273.28
            ,262.05
            ,267.65
            ,252.6
            ,270.07
            ,276.43
            ,265.89
            ,284.51
            ,273.29
            ,266.04
            ,245.44
            ,261.08
            ,246.47
            ,216.31
            ,240.84
            ,196.4
            ,217.27
            ,202.82
            ,212.97
            ,205.75
            ,212.69
            ,249.18
            ,245.62
            ,257.24
            ,252.73
            ,265.59
            ,263.6
            ,243.07
            ,255.47
            ,243.91
            ,268.4
            ,259.03
            ,266.95
            ,262.95
            ,269.85
            ,283.95
            ,280.84
            ,294.7
            ,292.32
            ,287.05
            ,269.51
            ,286.15
            ,284.01
            ,289.59
            ,297.08
            ,291.36
            ,298.46
            ,292.28
            ,282.78
            ,291.29
            ,293.74
            ,297.79
            ,304.87
            ,312.5
            ,322.62
            ,312.1
            ,311.2
            ,321.22
            ,339.63
            ,350.01
            ,352.22
            ,358.8
            ,351.01
            ,361.05
            ,348.71
            ,341.01
            ,339.48
            ,355.02
            ,352.25
            ,353.01
            ,350.78
            ,350.66
            ,356.8
            ,352.2
            ,361.84
            ,374.67
            ,351.85
            ,357.3
            ,366.95
            ,362.74
            ,369.44
            ,368.72
            ,370.45
            ,381.07
            ,378
            ,369.42
            ,379.6
            ,366.2
            ,368
            ,379.91
            ,381.2
            ,384.49
            ,393.57
            ,394.87
            ,408.64
            ,420.36
            ,419.17
            ,402.09
            ,415.08
            ,409.09
            ,405.39
            ,408.06
            ,420.43
            ,413.14
            ,417.55
            ,405.19
            ,407.78
            ,416.86
            ,408.62
            ,418.62
            ,424.56
            ,424.59
            ,440.41
            ,449.11
            ,451.47
            ,453.42
            ,447.98
            ,446.6
            ,434
            ,457.61
            ,457.72
            ,462.56
            ,493.48
            ,490.43
            ,485.54
            ,485.64
            ,507.34
            ,508.81
            ,510
            ,510.92
            ,505.13
            ,525.91
            ,534.98
            ,552.84
            ,573.86
            ,520.62
            ,504.9
            ,476.52
            ,508.6
            ,492.47
            ,486.58
            ,514.89
            ,519.64
            ,500.58
            ,498.54
            ,487.57
            ,500.69
            ,505.51
            ,484.95
            ,493.92
            ,514.95
            ,521.4
            ,529.03
            ,541.22
            ,544.58
            ,522.49
            ,545.7
            ,562.6
    };

    private static double[] births = new double[]{

            35
            ,32
            ,30
            ,31
            ,44
            ,29
            ,45
            ,43
            ,38
            ,27
            ,38
            ,33
            ,55
            ,47
            ,45
            ,37
            ,50
            ,43
            ,41
            ,52
            ,34
            ,53
            ,39
            ,32
            ,37
            ,43
            ,39
            ,35
            ,44
            ,38
            ,24
            ,23
            ,31
            ,44
            ,38
            ,50
            ,38
            ,51
            ,31
            ,31
            ,51
            ,36
            ,45
            ,51
            ,34
            ,52
            ,47
            ,45
            ,46
            ,39
            ,48
            ,37
            ,35
            ,52
            ,42
            ,45
            ,39
            ,37
            ,30
            ,35
            ,28
            ,45
            ,34
            ,36
            ,50
            ,44
            ,39
            ,32
            ,39
            ,45
            ,43
            ,39
            ,31
            ,27
            ,30
            ,42
            ,46
            ,41
            ,36
            ,45
            ,46
            ,43
            ,38
            ,34
            ,35
            ,56
            ,36
            ,32
            ,50
            ,41
            ,39
            ,41
            ,47
            ,34
            ,36
            ,33
            ,35
            ,38
            ,38
            ,34
            ,53
            ,34
            ,34
            ,38
            ,35
            ,32
            ,42
            ,34
            ,46
            ,30
            ,46
            ,45
            ,54
            ,34
            ,37
            ,35
            ,40
            ,42
            ,58
            ,51
            ,32
            ,35
            ,38
            ,33
            ,39
            ,47
            ,38
            ,52
            ,30
            ,34
            ,40
            ,35
            ,42
            ,41
            ,42
            ,38
            ,24
            ,34
            ,43
            ,36
            ,55
            ,41
            ,45
            ,41
            ,37
            ,43
            ,39
            ,33
            ,43
            ,40
            ,38
            ,45
            ,46
            ,34
            ,35
            ,48
            ,51
            ,36
            ,33
            ,46
            ,42
            ,48
            ,34
            ,41
            ,35
            ,40
            ,34
            ,30
            ,36
            ,40
            ,39
            ,45
            ,38
            ,47
            ,33
            ,30
            ,42
            ,43
            ,41
            ,41
            ,59
            ,43
            ,45
            ,38
            ,37
            ,45
            ,42
            ,57
            ,46
            ,51
            ,41
            ,47
            ,26
            ,35
            ,44
            ,41
            ,42
            ,36
            ,45
            ,45
            ,45
            ,47
            ,38
            ,42
            ,35
            ,36
            ,39
            ,45
            ,43
            ,47
            ,36
            ,41
            ,50
            ,39
            ,41
            ,46
            ,64
            ,45
            ,34
            ,38
            ,44
            ,48
            ,46
            ,44
            ,37
            ,39
            ,44
            ,45
            ,33
            ,44
            ,38
            ,46
            ,46
            ,40
            ,39
            ,44
            ,48
            ,50
            ,41
            ,42
            ,51
            ,41
            ,44
            ,38
            ,68
            ,40
            ,42
            ,51
            ,44
            ,45
            ,36
            ,57
            ,44
            ,42
            ,53
            ,42
            ,34
            ,40
            ,56
            ,44
            ,53
            ,55
            ,39
            ,59
            ,55
            ,73
            ,55
            ,44
            ,43
            ,40
            ,47
            ,51
            ,56
            ,49
            ,54
            ,56
            ,47
            ,44
            ,43
            ,42
            ,45
            ,50
            ,48
            ,43
            ,40
            ,59
            ,41
            ,42
            ,51
            ,49
            ,45
            ,43
            ,42
            ,38
            ,47
            ,38
            ,36
            ,42
            ,35
            ,28
            ,44
            ,36
            ,45
            ,46
            ,48
            ,49
            ,43
            ,42
            ,59
            ,45
            ,52
            ,46
            ,44
            ,52
            ,45
            ,32
            ,46
            ,41
            ,34
            ,33
            ,36
            ,49
            ,43
            ,43
            ,34
            ,39
            ,35
            ,52
            ,47
            ,52
            ,39
            ,40
            ,42
            ,42
            ,53
            ,39
            ,40
            ,38
            ,44
            ,34
            ,37
            ,52
            ,48
            ,55
            ,50
    };

    public static double[] money = new double[]{
            64.2101
            ,63.8881
            ,63.8881
            ,63.8881
            ,63.7542
            ,63.773
            ,64.0213
            ,63.843
            ,63.7101
            ,63.7101
            ,63.7101
            ,63.7637
            ,64.0239
            ,63.9722
            ,64.1005
            ,64.0817
            ,64.0817
            ,64.0817
            ,64.4097
            ,64.1401
            ,64.1948
            ,63.8135
            ,63.7185
            ,63.7185
            ,63.7185
            ,63.7244
            ,63.5788
            ,63.5653
            ,63.2257
            ,62.5544
            ,62.5544
            ,62.5544
            ,62.7686
            ,62.5326
            ,62.5831
            ,62.5283
            ,62.4071
            ,62.4071
            ,62.4071
            ,62.2499
            ,62.1673
            ,61.7164
            ,61.7676
            ,62.0315
            ,62.0315
            ,62.0315
            ,61.9057
            ,61.9057
            ,61.9057
            ,61.9057
            ,61.9057
            ,61.9057
            ,61.9057
            ,61.9057
            ,61.9057
            ,61.9057
            ,61.234
            ,61.2632
            ,61.2632
            ,61.2632
            ,60.9474
            ,61.414
            ,61.4328
            ,61.5694
            ,61.5333
            ,61.5333
            ,61.5333
            ,61.4654
            ,61.8552
            ,61.8343
            ,61.9515
            ,61.8031
            ,61.8031
            ,61.8031
            ,62.338
            ,62.8299
            ,62.3934
            ,63.0359
            ,63.1385
            ,63.1385
            ,63.1385
            ,63.9091
            ,63.4342
            ,63.1742
            ,62.7977
            ,63.472
            ,63.472
            ,63.472
            ,63.7708
            ,63.949
            ,63.047
            ,63.6016
            ,63.4536
            ,63.4536
            ,63.4536
            ,63.3085
            ,63.7698
            ,63.6873
            ,63.7413
            ,64.3008
            ,64.3008
            ,64.3008
            ,64.3008
            ,64.9213
            ,65.5177
            ,65.6097
            ,66.9909
            ,66.9909
            ,66.9909
            ,66.3274
            ,66.4437
            ,66.0784
            ,66.1854
            ,67.5175
            ,67.5175
            ,67.5175
            ,67.5175
            ,72.0208
            ,71.472
            ,74.0274
            ,73.1882
            ,73.1882
            ,73.1882
            ,74.1262
            ,73.8896
            ,77.2131
            ,80.157
            ,78.0443
            ,78.0443
            ,78.0443
            ,80.8815
            ,78.8493
            ,77.7928
            ,78.7223
            ,77.7325
            ,77.7325
            ,77.7325
            ,77.7325
            ,77.7325
            ,77.7325
            ,77.7325
            ,77.7325
            ,77.7325
            ,77.7325
            ,76.4074
            ,75.455
            ,75.7499
            ,74.605
            ,73.7515
            ,73.7515
            ,73.7515
            ,73.5245
            ,73.315
            ,73.7145
            ,74.7119
            ,73.9441
            ,73.9441
            ,73.9441
            ,74.6657
            ,76.2562
            ,77.0416
            ,75.129
            ,74.7163
            ,74.7163
            ,74.7163
            ,74.496
            ,74.5706
            ,73.6894
            ,72.7263
            ,72.7263
            ,72.7263
            ,72.7263
            ,72.7263
            ,72.7263
            ,73.9719
            ,74.1169
            ,73.8725
            ,73.8725
            ,73.8725
            ,73.8725
            ,73.4326
            ,73.5819
            ,73.9298
            ,73.2056
            ,73.2056
            ,73.2056
            ,72.9798
            ,72.3918
            ,72.3381
            ,70.924
            ,71.8804
            ,71.8804
            ,71.8804
            ,71.5962
            ,71.1408
            ,71.0635
            ,71.1012
            ,70.752
            ,70.752
            ,70.752
            ,69.7114
            ,68.9831
            ,68.3413
            ,69.0151
            ,68.6319
            ,68.6319
            ,68.6319
            ,68.3123
            ,68.6745
            ,68.6183
            ,69.1219
            ,69.1219
            ,69.1219
            ,69.1219
            ,70.395
            ,69.7524
            ,69.4822
            ,69.618
            ,69.5725
            ,69.5725
            ,69.5725
            ,69.4835
            ,68.8376
            ,68.8376
            ,69.466
            ,69.1284
            ,69.1284
            ,69.1284
            ,69.9513
            ,70.4413
            ,70.4413
            ,70.5198
            ,70.4999
            ,70.4999
            ,70.4999
            ,71.3409
            ,72.1719
            ,71.2379
            ,70.88
            ,71.2298
            ,71.2298
            ,71.2298
            ,70.7479
            ,71.1275
            ,70.7998
            ,71.231
            ,71.7139
            ,71.7139
            ,71.7139
            ,71.9628
            ,70.9668
            ,70.7881
            ,70.963
            ,71.5974
            ,71.5974
            ,71.5974
            ,71.585
            ,71.9196
            ,72.2348
            ,73.3633
            ,73.4261
            ,73.4261
            ,73.4261
            ,74.1586
            ,73.3806
            ,73.2806
            ,73.0397
            ,73.6376
            ,73.6376
            ,73.6376
            ,73.775
            ,73.1522
            ,73.2351
            ,73.6067
            ,73.2157
            ,73.2157
            ,73.2157
            ,72.9676
            ,73.4321
            ,73.2392
            ,73.7711
            ,74.0999
            ,74.0999
            ,74.0999
            ,74.4184
            ,74.5126
            ,75.5379
            ,75.2354
            ,74.6382
            ,74.6382
            ,74.6382
            ,73.8039
            ,73.5849
            ,73.8588
            ,75.468
            ,75.1823
            ,75.1823
            ,75.1823
            ,75.591
            ,75.9645
            ,76.0713
            ,75.5274
            ,74.8896
            ,74.8896
            ,74.8896
            ,74.7148
            ,75.1884
            ,74.9278
            ,75.1941
            ,75.0319
            ,75.0319
            ,75.0319
            ,76.0381
            ,76.2711
            ,76.3545
            ,77.178
            ,76.8195
            ,76.8195
            ,76.8195
            ,78.6713
            ,79.6845
            ,78.7847
            ,77.2774
            ,78.0915
            ,78.0915
            ,78.0915
            ,78.1281
            ,78.5119
            ,78.0921
            ,77.9157
            ,77.0284
            ,77.0284
            ,77.0284
            ,77.0239
            ,77.2855
            ,77.2759
            ,77.9461
            ,77.9644
            ,77.9644
            ,77.9644
            ,77.9241
            ,77.778
            ,77.0322
            ,77.0809
            ,76.4667
            ,76.4667
            ,76.4667
            ,76.4443
            ,76.4556
            ,77.552
            ,78.8699
            ,79.3323
            ,79.3323
            ,79.3323
            ,80.5749
            ,80.0006
            ,80.0006
            ,78.4559
            ,77.1875
            ,77.1875
            ,77.1875
            ,76.9515
            ,76.3978
            ,76.2075
            ,77.1148
            ,77.3262
    };

    private static double[] money2 = new double[]{
            96.423
            ,95.878
            ,95.75
            ,95.228
            ,95.479
            ,94.79
            ,95.12
            ,95.266
            ,95.207
            ,95.675
            ,95.677
            ,95.713
            ,95.993
            ,95.993
            ,95.959
            ,95.772
            ,96.297
            ,95.465
            ,95.424
            ,95.516
            ,95.031
            ,95.304
            ,95.3
            ,95.57
            ,95.817
            ,96.152
            ,96.289
            ,96.416
            ,96.857
            ,96.503
            ,96.938
            ,96.805
            ,96.74
            ,96.74
            ,96.349
            ,96.294
            ,96.463
            ,96.367
            ,96.271
            ,95.865
            ,96.038
            ,96.043
            ,96.45
            ,96.61
            ,96.795
            ,96.799
            ,97.628
            ,97.269
            ,97.174
            ,96.899
            ,96.512
            ,96.769
            ,96.59
            ,96.516
            ,95.831
            ,95.201
            ,95.987
            ,96.151
            ,96.068
            ,96.225
            ,96.283
            ,96.764
            ,96.845
            ,96.799
            ,96.923
            ,96.662
            ,96.925
            ,97.002
            ,96.65
            ,96.611
            ,96.558
            ,96.809
            ,96.598
            ,96.556
            ,96.652
            ,96.658
            ,97.151
            ,96.955
            ,97.32
            ,97.855
            ,97.919
            ,97.726
            ,97.581
            ,97.201
            ,97.41
            ,97.586
            ,97.26
            ,97.268
            ,97.399
            ,97.388
            ,97.164
            ,97.125
            ,97.12
            ,97.322
            ,97.376
            ,97.678
            ,97.824
            ,97.764
            ,97.896
            ,97.881
            ,97.723
            ,97.477
            ,97.477
            ,97.842
            ,98.035
            ,98.053
            ,97.666
            ,97.06
            ,96.999
            ,97.251
            ,96.997
            ,96.49
            ,96.711
            ,96.645
            ,96.97
            ,96.999
            ,97.57
            ,97.396
            ,97.153
            ,96.582
            ,96.138
            ,95.718
            ,95.487
            ,95.648
            ,95.728
            ,95.742
            ,95.666
            ,96.409
            ,96.274
            ,96.331
            ,96.331
            ,96.89
            ,96.984
            ,97.095
            ,96.703
            ,96.666
            ,96.424
            ,96.545
            ,97.041
            ,96.853
            ,96.449
            ,96.817
            ,96.94
            ,97.418
            ,97.452
            ,97.552
            ,97.751
            ,97.796
            ,97.809
            ,98.258
            ,98.144
            ,97.852
            ,97.308
            ,97.417
            ,97.345
            ,97.434
            ,97.322
            ,97.198
            ,97.631
            ,97.826
            ,98.005
            ,98.007
            ,98.221
            ,98.063
            ,98.179
            ,98.064
            ,97.53
            ,97.989
            ,97.907
            ,98.12
            ,98.455
            ,98.86
            ,98.86
            ,98.949
            ,98.393
            ,98.382
            ,98.362
            ,98.248
            ,98.307
            ,98.628
            ,98.308
            ,98.255
            ,98.627
            ,97.819
            ,98.134
            ,97.847
            ,98.136
            ,98.221
            ,97.927
            ,98.659
            ,98.765
            ,98.761
            ,99.021
            ,98.777
            ,98.689
            ,98.54
            ,98.488
            ,98.665
            ,98.822
            ,98.815
            ,98.406
            ,98.005
            ,98.17
            ,98.003
            ,97.723
            ,97.335
            ,97.008
            ,97.05
            ,97.256
            ,97.236
            ,97.405
            ,97.599
            ,97.524
            ,97.469
            ,97.439
            ,97.154
            ,97.041
            ,97.366
            ,97.805
            ,97.764
            ,97.989
            ,98.201
            ,98.033
            ,98.151
            ,98.23
            ,98.019
            ,97.871
            ,97.663
            ,97.742
            ,97.814
            ,97.899
            ,98.176
            ,98.238
            ,98.17
            ,98.288
            ,98.288
            ,98.202
            ,97.791
            ,97.681
            ,97.602
            ,97.371
            ,97.661
            ,97.609
            ,97.385
            ,97.056
            ,97.384
            ,97.171
            ,96.965
            ,96.777
            ,96.963
            ,96.955
            ,97.274
            ,97.235
            ,97.251
            ,97.115
            ,96.546
            ,96.407
            ,96.058
            ,96.525
            ,96.521
            ,96.35
            ,96.702
            ,96.996
            ,97.162
            ,97.078
            ,97.06
            ,97.094
            ,96.96
            ,97.062
            ,97.359
            ,97.359
            ,97.294
            ,97.295
            ,97.484
            ,97.65
            ,97.767
            ,97.835
            ,97.819
            ,97.706
            ,97.213
            ,97.625
            ,97.809
            ,98.158
            ,98.381
            ,98.571
            ,98.714
            ,98.594
            ,98.922
            ,98.958
            ,99.003
            ,99.003
            ,99.333
            ,99.597
            ,99.776
            ,99.188
            ,99.284
            ,98.901
            ,98.938
            ,98.461
            ,98.081
            ,97.319
            ,97.122
            ,97.307
            ,96.79
            ,95.934
            ,94.87
            ,96.389
            ,96.492
            ,97.464
            ,98.764
            ,98.24
            ,99.804
            ,101.543
            ,103.605
            ,103.502
            ,103.24
            ,102.247
            ,100.997
            ,99.453
            ,98.537
            ,99.281
            ,99.092
            ,99.753
            ,100.271
            ,100.677
            ,100.755
            ,99.914
            ,100.17
            ,99.504
            ,99.336
            ,98.885
            ,99.486
            ,100.1
            ,99.836
            ,100.058
            ,100.374
            ,100.528
            ,100.535
            ,100.434
            ,100.097
            ,99.934
            ,99.644
            ,99.028
            ,99.1
            ,99.567
            ,99.762
            ,100.136
            ,99.906
            ,99.769
            ,100.27
            ,99.956
            ,100.291
            ,100.507
            ,100.434
            ,99.681
            ,99.366
            ,99.135
            ,99.403
            ,99.888
            ,99.888
            ,98.906
            ,99.058
            ,98.372
            ,98.341
            ,97.82
            ,97.659
            ,97.259
            ,96.657
            ,96.922
            ,96.608
            ,96.321
            ,95.95
            ,96.739
            ,97.305
            ,96.978
            ,96.933
            ,97.144
            ,97.4
            ,97.577
            ,96.985
            ,96.608
            ,97.129
            ,97.388
            ,97.404
            ,97.501
            ,97.349
            ,97.155
            ,97.301
            ,97.301
            ,96.682
            ,96.839
            ,96.368
            ,96.673
            ,96.614
            ,96.407
            ,96.207
            ,96.039
            ,96.319
            ,95.889
            ,95.772
            ,95.06
            ,94.93
            ,94.649
            ,94.38
            ,93.615
            ,93.647
            ,93.432
            ,93.009
            ,93.321
            ,93.507
            ,93.378
            ,92.85
            ,92.768
            ,93.412
            ,93.569
            ,93.6
            ,93.408
            ,93.317
            ,93.085
            ,92.847
            ,92.259
            ,92.88
            ,92.778
            ,93.24
            ,93.289
            ,93.019
            ,92.996
            ,92.991
            ,92.379
            ,92.131
            ,92.337
            ,92.834
            ,92.733
            ,92.719
            ,92.719
            ,93.441
            ,93.258
            ,93.331
            ,93.32
            ,92.912
            ,93.085
            ,93.231
            ,92.969
            ,92.952
            ,93.684
            ,94.018
            ,94.443
            ,94.394
            ,94.682
            ,94.302
            ,93.927
            ,93.927
            ,93.762
            ,93.909
            ,93.545
            ,93.744
            ,93.678
            ,93.648
            ,93.065
            ,93.104
            ,93.536
            ,93.366
            ,93.864
            ,93.679
            ,93.429
            ,93.051
            ,92.599
            ,92.964
            ,92.765
            ,93.044
            ,92.927
            ,93.409
            ,93.977
            ,94.042
            ,94.145
            ,93.56
            ,93.411
            ,92.516
            ,92.225
            ,92.715
            ,92.736
            ,93.024
            ,92.956
            ,92.75
            ,92.63
            ,92.398
            ,92.311
            ,92.284
            ,92.395
            ,92.494
            ,92.22
    };

    private static double[] temperature = new double[]{
            20.7
            ,17.9
            ,18.8
            ,14.6
            ,15.8
            ,15.8
            ,15.8
            ,17.4
            ,21.8
            ,20.0
            ,16.2
            ,13.3
            ,16.7
            ,21.5
            ,25.0
            ,20.7
            ,20.6
            ,24.8
            ,17.7
            ,15.5
            ,18.2
            ,12.1
            ,14.4
            ,16.0
            ,16.5
            ,18.7
            ,19.4
            ,17.2
            ,15.5
            ,15.1
            ,15.4
            ,15.3
            ,18.8
            ,21.9
            ,19.9
            ,16.6
            ,16.8
            ,14.6
            ,17.1
            ,25.0
            ,15.0
            ,13.7
            ,13.9
            ,18.3
            ,22.0
            ,22.1
            ,21.2
            ,18.4
            ,16.6
            ,16.1
            ,15.7
            ,16.6
            ,16.5
            ,14.4
            ,14.4
            ,18.5
            ,16.9
            ,17.5
            ,21.2
            ,17.8
            ,18.6
            ,17.0
            ,16.0
            ,13.3
            ,14.3
            ,11.4
            ,16.3
            ,16.1
            ,11.8
            ,12.2
            ,14.7
            ,11.8
            ,11.3
            ,10.6
            ,11.7
            ,14.2
            ,11.2
            ,16.9
            ,16.7
            ,8.1
            ,8.0
            ,8.8
            ,13.4
            ,10.9
            ,13.4
            ,11.0
            ,15.0
            ,15.7
            ,14.5
            ,15.8
            ,16.7
            ,16.8
            ,17.5
            ,17.1
            ,18.1
            ,16.6
            ,10.0
            ,14.9
            ,15.9
            ,13.0
            ,7.6
            ,11.5
            ,13.5
            ,13.0
            ,13.3
            ,12.1
            ,12.4
            ,13.2
            ,13.8
            ,10.6
            ,9.0
            ,10.0
            ,9.8
            ,11.5
            ,8.9
            ,7.4
            ,9.9
            ,9.3
            ,9.9
            ,7.4
            ,8.6
            ,11.9
            ,14.0
            ,8.6
            ,10.0
            ,13.5
            ,12.0
            ,10.5
            ,10.7
            ,8.1
            ,10.1
            ,10.6
            ,5.3
            ,6.6
            ,8.5
            ,11.2
            ,9.8
            ,5.9
            ,3.2
            ,2.1
            ,3.4
            ,5.4
            ,9.6
            ,11.5
            ,12.3
            ,12.6
            ,11.0
            ,11.2
            ,11.4
            ,11.8
            ,12.8
            ,11.6
            ,10.6
            ,9.8
            ,11.2
            ,5.7
            ,7.1
            ,2.5
            ,3.5
            ,4.6
            ,11.0
            ,5.7
            ,7.7
            ,10.4
            ,11.4
            ,9.2
            ,6.1
            ,2.7
            ,4.3
            ,6.3
            ,3.8
            ,4.4
            ,7.1
            ,4.8
            ,5.8
            ,6.2
            ,7.3
            ,9.2
            ,10.2
            ,9.5
            ,9.5
            ,10.7
            ,10.0
            ,6.5
            ,7.0
            ,7.4
            ,8.1
            ,6.6
            ,8.3
            ,8.9
            ,4.6
            ,6.8
            ,5.7
            ,6.1
            ,7.0
            ,7.2
            ,6.3
            ,8.8
            ,5.0
            ,7.4
            ,10.1
            ,12.0
            ,9.0
            ,8.9
            ,9.8
            ,9.0
            ,9.2
            ,7.7
            ,8.0
            ,6.1
            ,3.5
            ,3.2
            ,5.7
            ,7.7
            ,9.0
            ,10.0
            ,6.2
            ,6.9
            ,6.5
            ,6.8
            ,7.0
            ,5.2
            ,3.0
            ,5.6
            ,7.9
            ,9.0
            ,8.6
            ,10.3
            ,10.5
            ,7.6
            ,9.7
            ,12.5
            ,7.4
            ,7.9
            ,3.9
            ,6.6
            ,4.6
            ,7.0
            ,6.0
            ,5.5
            ,8.1
            ,5.5
            ,6.2
            ,8.0
            ,10.3
            ,9.8
            ,9.6
            ,8.5
            ,7.5
            ,11.2
            ,14.6
            ,11.7
            ,7.8
            ,12.3
            ,10.1
            ,11.5
            ,7.3
            ,10.9
            ,14.1
            ,10.7
            ,16.9
            ,10.5
            ,6.5
            ,11.0
            ,6.3
            ,10.5
            ,7.2
            ,7.6
            ,10.7
            ,7.8
            ,9.6
            ,11.4
            ,12.4
            ,8.9
            ,13.2
            ,8.6
            ,6.2
            ,11.4
            ,13.2
            ,14.3
            ,7.3
            ,12.9
            ,7.8
            ,6.2
            ,5.6
            ,10.0
            ,13.3
            ,8.3
            ,10.2
            ,8.6
            ,7.3
            ,10.4
            ,11.2
            ,13.2
            ,11.4
            ,9.1
            ,6.6
            ,8.4
            ,9.7
            ,13.2
            ,12.5
            ,11.0
            ,11.0
            ,11.7
            ,9.2
            ,11.5
            ,13.6
            ,13.7
            ,10.4
            ,11.5
            ,7.6
            ,9.6
            ,14.2
            ,15.7
            ,10.5
            ,10.5
            ,9.7
            ,9.5
            ,11.3
            ,8.9
            ,9.4
            ,11.9
            ,11.7
            ,13.4
            ,12.6
            ,10.1
            ,15.8
            ,13.6
            ,11.9
            ,9.9
            ,12.6
            ,17.8
            ,15.0
            ,13.6
            ,13.4
            ,10.5
            ,14.2
            ,11.5
            ,13.0
            ,15.0
            ,14.7
            ,12.6
            ,12.5
            ,13.5
            ,14.8
            ,17.2
            ,9.7
            ,12.1
            ,12.8
            ,11.2
            ,16.4
            ,15.6
            ,13.3
            ,11.0
            ,11.1
            ,15.0
            ,12.8
            ,15.0
            ,14.2
            ,14.0
            ,15.5
            ,13.3
            ,15.6
            ,15.2
            ,17.4
            ,17.0
            ,15.0
            ,13.5
            ,15.2
            ,13.0
            ,12.5
            ,14.1
            ,14.8
            ,16.2
            ,15.8
            ,19.1
            ,22.2
            ,15.9
            ,13.0
            ,14.1
            ,15.8
            ,24.0
            ,18.0
            ,19.7
            ,25.2
            ,20.5
            ,19.3
            ,15.8
            ,17.0
            ,18.4
            ,13.3
            ,14.6
            ,12.5
            ,17.0
            ,17.1
            ,14.0
            ,14.6
            ,13.3
            ,14.8
            ,15.1
            ,13.1
            ,13.6
            ,19.5
            ,22.7
            ,17.2
            ,13.5
            ,15.4
            ,17.0
            ,19.2
            ,22.8
            ,26.3
            ,18.2
            ,17.0
            ,14.8
            ,12.8
            ,15.5
            ,15.6
            ,13.1
            ,15.2
            ,14.1
            ,12.5
            ,14.6
            ,10.4
            ,13.9
            ,11.9
            ,13.5
            ,9.8
            ,14.0
            ,21.5
            ,19.5
            ,16.7
            ,19.1
            ,11.0
            ,9.0
            ,10.0
            ,14.6
            ,12.5
            ,17.2
            ,19.2
            ,22.2
            ,15.7
            ,14.2
            ,9.8
            ,14.0
            ,17.5
            ,20.7
            ,15.6
            ,13.2
            ,14.5
            ,16.8
            ,17.2
            ,13.4
            ,14.2
            ,14.3
            ,10.2
            ,10.4
            ,12.3
            ,11.9
            ,11.2
            ,8.5
            ,12.0
            ,12.4
            ,12.9
            ,10.1
            ,15.0
            ,13.6
            ,12.4
            ,13.6
            ,16.1
            ,19.5
            ,14.2
            ,9.3
            ,10.1
            ,7.4
            ,8.6
            ,7.8
            ,9.1
            ,13.0
            ,16.5
            ,12.9
            ,6.9
            ,6.9
            ,8.7
            ,10.0
            ,10.8
            ,7.5
            ,6.3
            ,11.9
            ,13.8
            ,11.8
            ,11.0
            ,10.1
            ,8.5
            ,5.5
            ,7.6
            ,8.7
            ,10.8
            ,11.2
            ,9.1
            ,3.7
            ,4.6
            ,6.6
            ,13.2
            ,15.2
            ,7.6
            ,8.4
            ,6.0
            ,8.3
            ,8.6
            ,11.1
            ,12.1
            ,12.9
            ,14.0
            ,12.5
            ,11.5
            ,7.0
            ,7.1
            ,9.0
            ,3.1
            ,2.5
            ,0.0
            ,1.6
            ,2.6
            ,5.7
            ,2.3
            ,4.5
            ,8.2
            ,6.9
            ,7.3
            ,6.0
            ,7.3
            ,7.6
            ,8.0
            ,8.0
            ,6.8
            ,7.3
            ,6.2
            ,6.9
            ,8.9
            ,4.0
            ,1.3
            ,0.8
            ,4.3
            ,7.3
            ,7.7
            ,9.0
            ,4.2
            ,1.6
            ,2.6
            ,3.4
            ,3.9
            ,7.0
            ,7.8
            ,5.3
            ,2.4
            ,2.8
            ,4.0
            ,7.5
            ,7.8
            ,5.6
            ,3.3
            ,5.0
            ,3.7
            ,3.9
            ,5.2
            ,0.2
            ,0.8
            ,0.9
            ,3.5
            ,6.6
            ,9.5
            ,9.0
            ,3.5
            ,4.5
            ,5.7
            ,5.6
            ,7.1
            ,9.7
            ,8.3
            ,9.1
            ,2.8
            ,2.2
            ,4.5
            ,3.8
            ,3.8
            ,6.2
            ,11.5
            ,10.2
            ,7.9
            ,9.0
            ,9.5
            ,6.0
            ,8.2
            ,9.2
            ,4.3
            ,6.6
            ,9.4
            ,13.2
            ,6.6
            ,5.1
            ,12.1
            ,11.2
            ,8.5
            ,4.6
            ,7.0
            ,14.2
            ,12.7
            ,7.6
            ,4.0
            ,10.0
            ,10.5
            ,5.0
            ,4.5
            ,8.2
            ,4.3
            ,9.8
            ,5.8
            ,5.0
            ,8.5
            ,9.0
            ,3.6
            ,6.7
            ,6.7
            ,10.1
            ,15.0
            ,8.9
            ,5.7
            ,4.2
            ,4.0
            ,5.3
            ,6.3
            ,8.5
            ,11.5
            ,7.7
            ,9.2
            ,7.8
            ,6.3
            ,6.3
            ,8.6
            ,6.1
            ,13.2
            ,9.9
            ,4.7
            ,5.8
            ,14.9
            ,10.7
            ,8.6
            ,9.4
            ,13.4
            ,11.6
            ,11.1
            ,15.6
            ,17.0
            ,18.5
            ,17.4
            ,16.5
            ,16.2
            ,16.1
            ,13.2
            ,18.0
            ,12.8
            ,11.7
            ,16.7
            ,15.6
            ,10.2
            ,10.3
            ,15.0
            ,18.0
            ,13.8
            ,10.5
            ,11.8
            ,7.2
            ,11.6
            ,7.4
            ,14.2
            ,12.2
            ,9.0
            ,12.3
            ,19.7
            ,12.8
            ,12.4
            ,12.0
            ,12.0
            ,11.1
            ,12.7
            ,14.2
            ,11.6
            ,12.0
            ,11.5
            ,8.3
            ,10.5
            ,9.0
            ,6.9
            ,9.4
            ,11.1
            ,9.1
            ,7.7
            ,10.0
    };



    public static void main(String[] args) throws IOException {
        //params
        int inputVectorSize = 6;
        //int outputVectorSize = 1;
        int hiddenLayerSize = 15;
        double n = 0.01;
        int maxEpoch = 100;
        double errorMin = 0.01;
        double trainTestSplit = 0.9;
        //input start
        List<Double> inputParams = new ArrayList<>();
        List<Double> inputParamsChart = new ArrayList<>();
        List<Double> xAxis = new ArrayList<>();
        double[] input = in;
        double[] inputCopy = Arrays.copyOf(input, input.length);
        Arrays.parallelSort(inputCopy);
        double minOfInput = inputCopy[0];
        double sum = 0;
        for (int i = 0; i < input.length; i++) {
            sum += input[i];
        }
        double maxOfInput = inputCopy[input.length - 1];
        for (int i = 0; i < input.length; i++) {
            inputParams.add((input[i] - minOfInput) / (maxOfInput - minOfInput));//Math.sin(i * 0.2) + Math.sin(i * 0.4) + 1) / 3);
            inputParamsChart.add(input[i]);
            xAxis.add((double)i); //* 0.2);
        }
        XYChart chart = QuickChart.getChart("error", "epoch", "errorVal", "error", xAxis, inputParamsChart);
        new SwingWrapper<XYChart>(chart).displayChart();
        /*BufferedReader bfr = new BufferedReader(new FileReader(args[0]));
        String line = bfr.readLine();
        while (line != null){
            try {
                inputParams.add(Double.parseDouble(line));
            } finally {
                line = bfr.readLine();
            }
        }*/

        int inputVectorsCount = inputParams.size() - (inputVectorSize + 1) + 1;
        double[][] inputVectors = new double[inputVectorsCount][inputVectorSize];
        double[] expectedOutput = new double[inputVectorsCount];
        for (int i = 0; i < inputVectorsCount; i++) {
            for (int j = 0; j < inputVectorSize; j++) {
                inputVectors[i][j] = inputParams.get(i + j);
            }
            expectedOutput[i] = inputParams.get(i + inputVectorSize);
        }
        int trainSize = (int)(trainTestSplit * inputVectorsCount);
        int testSize = inputVectorsCount - trainSize;
        double[][] trainInputVects = new double[trainSize][inputVectorSize];
        double[] trainExpectedOutput = new double[trainSize];
        double[][] testInputVects = new double[testSize][inputVectorSize];
        double[] testExpectedOutput = new double[testSize];
        for (int i = 0; i < trainSize; i++) {
            trainInputVects[i] = inputVectors[i];
            trainExpectedOutput[i] = expectedOutput[i];
        }
        for (int i = 0; i < testSize; i++) {
            testInputVects[i] = inputVectors[trainSize + i];
            testExpectedOutput[i] = expectedOutput[trainSize + i];
        }
        double[][] initInputVects = new double[hiddenLayerSize][inputVectorSize];
        //Select vectors to init hidden layer
        //randoms from withing list
        //Random rng = new Random();
        //just any
        List<Integer> indexes = new ArrayList<>();
        for (int i = 0; i < testSize; i++) {
            indexes.add(i);
        }
        //minmax of sections
        indexes = new ArrayList<>();
        int sections = hiddenLayerSize / 2 + hiddenLayerSize % 2;
        int maxTotal = trainSize - inputVectorSize;
        int sectionSize = maxTotal / sections;
        for (int i = 0; i < sections; i++) {
            int sectionMinI = sectionSize * i;
            int sectionMaxI = sectionSize * i;
            for (int j = 0; j < sectionSize; j++) {
                if (expectedOutput[sectionMinI] > expectedOutput[j + i * sectionSize]) {
                    sectionMinI = j + i * sectionSize;
                }
                if (expectedOutput[sectionMaxI] < expectedOutput[j + i * sectionSize]) {
                    sectionMaxI = j + i * sectionSize;
                }
            }
            //work on this, there is bug
            indexes.add(sectionMinI + inputVectorSize / 2);
            indexes.add(sectionMaxI + inputVectorSize / 2);
        }
        Collections.shuffle(indexes);
        for (int i = 0; i < hiddenLayerSize; i++) {
            double[] randVect = trainInputVects[indexes.get(i)];//new double[inputVectorSize];
            //for (int j = 0; j < inputVectorSize; j++) {
              //  randVect[j] = Math.random(); //* (maxOfInput - minOfInput) + minOfInput;
            //}
            initInputVects[i] = randVect;// trainInputVects[rng.nextInt(trainSize)];
        }
        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        RBN net = new RBN(inputVectorSize, hiddenLayerSize);
        net.initCenters(initInputVects);//, trainInputVects);
        net.initW();
        net.train2(trainInputVects, trainExpectedOutput, maxEpoch, n, errorMin);
        //net.outWeights[0] += 0.075;
        //evaluate Results

        double error = 0;
        for (int i = 0; i < testSize; i++) {
            double res = net.f(testInputVects[i]);
            System.out.println("RESULT: " + (res *  (maxOfInput - minOfInput) + minOfInput) + " EXPECTED: " + (testExpectedOutput[i] *  (maxOfInput - minOfInput) + minOfInput));
            error += Math.pow(expectedOutput[i] - net.f(inputVectors[i]), 2);
        }
        error /= testSize - 1;
        error = Math.sqrt(error);
        System.out.println("Error: " + error);
        System.out.println("Scaled Error: " + error * (maxOfInput - minOfInput));
        List<Double> resultTrend = new ArrayList<>();
        List<Double> xAxis2 = new ArrayList<>();
        double[] currentInput = new double[inputVectorSize];
        /*for (int i = 0; i < inputVectorSize; i++) {
            currentInput[i] = inputParams.get(i);
        }
        for (int i = inputVectorSize; i < inputParams.size() - outputVectorSize; i+=outputVectorSize) {
            double[] res = net.f(currentInput);
            for (int j = 0; j < inputVectorSize - outputVectorSize; j++) {
                currentInput[j] = currentInput[j + outputVectorSize];
            }
            for (int j = 0; j < outputVectorSize; j++) {
                currentInput[inputVectorSize - outputVectorSize + j] = inputParams.get(i + j);
            }
            for (int j = 0; j < outputVectorSize; j++) {
                resultTrend.add(res[j]);
                xAxis2.add((double)(i + j));// * 0.2);
            }
        }*/
        List<Double> resTrend3 = new ArrayList<>();
        List<Double> xAxis3 = new ArrayList<>();

        for (int i = 0; i < inputVectorsCount - 1; i++) {
            System.out.println("Vector " + i + " Expected " + expectedOutput[i] + " Result " + net.f(inputVectors[i]));
            xAxis3.add((double)(i + inputVectorSize));
            resTrend3.add(net.f(inputVectors[i]));
        }
        //for(int k = 0; k < testSize / 5; k++) {
            for (int i = 0; i < inputVectorSize; i++) {
                currentInput[i] = trainInputVects[trainSize - 1][i];//inputParams.get(/*k * 5*/ + trainSize - 1 + i);
            }
            for (int i = /*k * 5 + */trainSize + inputVectorSize - 1; i < /*k * 5 + trainSize + inputVectorSize - 1 + 5*/inputParams.size(); i++) {
                double res = net.f(currentInput);
                for (int j = 0; j < inputVectorSize - 1; j++) {
                    currentInput[j] = currentInput[j + 1];
                }
                currentInput[inputVectorSize - 1] = res;//inputParams.get(i);
                resultTrend.add(res);
                xAxis2.add((double) i);// * 0.2);
            }
        //}
        /*for (int i = 0; i < inputVectorSize; i++) {
            currentInput[i] = inputParams.get(i);
        }
        for (int i = inputVectorSize; i < inputParams.size(); i++) {
            double res = net.f(currentInput);
            for (int j = 0; j < inputVectorSize - 1; j++) {
                currentInput[j] = currentInput[j + 1];
            }
            currentInput[inputVectorSize - 1] = res;//inputParams.get(i);
            resultTrend.add(res);
            xAxis2.add((double)i);// * 0.2);
        }*/
        XYChart chart2 = QuickChart.getChart("error", "epoch", "errorVal", "error", xAxis2, resultTrend);
        new SwingWrapper<XYChart>(chart2).displayChart();
        XYChart chart3 = new XYChart(800, 600);
        chart3.setTitle("result");
        chart3.setXAxisTitle("valueId");
        chart3.setYAxisTitle("value");
        chart3.addSeries("input", xAxis, inputParams).setMarker(SeriesMarkers.NONE);
        chart3.addSeries("testRes", xAxis2, resultTrend).setMarker(SeriesMarkers.NONE);
        chart3.addSeries("sideBySide", xAxis3, resTrend3).setMarker(SeriesMarkers.NONE);
        new SwingWrapper<XYChart>(chart3).displayChart();
        //derivTest
        int testVectId = 10;
        for (int i = 0; i < hiddenLayerSize; i++) {
            double val1 = net.wDeriv(i, inputVectors[testVectId]);
            net.outWeights[i + 1] += 0.001;
            double val21 = net.f(inputVectors[testVectId]);
            net.outWeights[i + 1] -= 0.002;
            double val22 = net.f(inputVectors[testVectId]);
            net.outWeights[i + 1] += 0.001;
            double val2 = (val21 - val22)/0.002;
            System.out.println("derivates for w i: " + i + " calced: " + val2 + " derived: " + val1);
        }

        /*for (int i = 0; i < hiddenLayerSize; i++) {
            for (int j = 0; j < inputVectorSize; j++) {
                double val1 = net.centerDeriv(i, j, inputVectors[testVectId]);
                net.centers[i][j] += 0.001;
                double val21 = net.f(inputVectors[testVectId]);
                net.centers[i][j] -= 0.002;
                double val22 = net.f(inputVectors[testVectId]);
                net.centers[i][j] += 0.001;
                double val2 = (val21 - val22)/0.002;
                System.out.println("derivates for center i: " + i + " j: " + j + " calced: " + val2 + " derived: " + val1);
            }
        }

        for (int i = 0; i < hiddenLayerSize; i++) {
            for (int r = 0; r < inputVectorSize; r++) {
                //for (int j = 0; j < inputVectorSize; j++) {
                    double val1 = net.QDeriv(i, r, r, inputVectors[testVectId]);
                    net.correlationMatrices[i][r][r] += 0.001;
                    double val21 = net.f(inputVectors[testVectId]);
                    net.correlationMatrices[i][r][r] -= 0.002;
                    double val22 = net.f(inputVectors[testVectId]);
                    net.correlationMatrices[i][r][r] += 0.001;
                    double val2 = (val21 - val22) / 0.002;
                    System.out.println("derivates for Q i: " + i + " r: " + r + " j: " + r + " calced: " + val2 + " derived: " + val1);
                //}
            }
        }*/
    }
}
